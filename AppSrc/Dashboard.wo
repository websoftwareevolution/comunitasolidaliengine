Use cWebView.pkg
Use cWebPanel.pkg
Use cWebForm.pkg
Use cWebButton.pkg
Use cWebGroup.pkg
Use cWebSpacer.pkg
Use cWebHtmlBox.pkg
Use cWebMenuGroup.pkg
Use cWebMenuItem.pkg
Use cWebLabel.pkg
Use cWebList.pkg
Use cWebColumn.pkg
Use carticoliDataDictionary.dd
Use cnegoziDataDictionary.dd

 
 Struct stFoundProducts
    String sid
    String sdes
    Number nrate
    Integer icategoriaid
    String scity
 End_Struct

Use sql.pkg
 
Object oDashboard is a cWebView
    Object onegozi_DD is a cnegoziDataDictionary
    End_Object

    Object OARTICOLISHOP_DD is a carticoliDataDictionary
    End_Object

    Object oSqlHandleManager is a cSQLHandleManager
    End_Object
    
    Set Main_DD to OARTICOLISHOP_DD
    Set Server to OARTICOLISHOP_DD

     {WebProperty=client}
     Property  stFoundProducts[] pMyLocalstFoundProducts
     
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
    // Add a DDO Structure 
    //
    // There is no need to synchronize a DD structure on the client so we do
    // not set the Server property or send ADDOStructure. We will simply use
    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
    // It is the HTML in these objects that is sent to the client each time 
    // this page is shown.
    //
    // Also, it is important for the drill-down Navigation interface that we
    // do not set the Server property to some DDO because this will affect 
    // constraints in the next view that we navigate to.
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    Set piMaxWidth to 1024
    
    Set psCaption to "Dashboard"
    Set peViewType to vtUndefined
    Set pbShowCaption to False
    Set psCSSClass to "Dashboard"
    
    Object oWebMainPanel is a cWebPanel
        Set piColumnCount to 24
        
        // - - - - - - - - - - - - - - -
        // Main Panel's Responsive Rules
        // - - - - - - - - - - - - - - -
        WebSetResponsive piColumnCount rmMobile to 1
        WebSetResponsive piColumnCount rmTabletPortrait to 16
        
          Object oRecentComunita_grp is a cWebGroup
            Set piColumnSpan to 8
            Set pbShowBorder to False
            Set pbShowCaption to False
            Set piColumnCount to 12
            Set psCSSClass to "RecentList"
            
            Object oRecentCustomers_lbl is a cWebLabel
                Set psCaption to "Nuovi Negozi"
                Set piColumnSpan to 0
                Set psCSSClass to "LabelTitle"
            End_Object

            Object oRecentComunita_list is a cWebHtmlList
                Set Server to onegozi_DD
                Set psCSSClass to "LatestActivity"
                Set psHtmlBefore to '<ul>'
                  Set psHtmlTemplate to '<li><div class="FirstLine MinorText">{{odatanegozio}}</div><div class="MainText">{{oNomenegozio}}</div><div class="MinorText">città - {{ocittanegozio}}</div><div class="MainText">Comunità {{oComuinitaNegozio}} </li>'
   
                Set psHtmlAfter to '</ul>'
                Set piLimitRows to 8
                Set pbServerOnRowClick to True
                Set piOrdering to 1
                Set pbReverseOrdering to True
    
               Object odatanegozio is a cWebColumn
                    Entry_Item negozi.datareg
                    Set psCaption to "data"
                    Set piWidth to 50
                   End_Object
                    
                Object oNomenegozio is a cWebColumn
                    Entry_Item negozi.nomenegozio
                    Set psCaption to "Nome negozio"
                    Set piWidth to 50
                End_Object
        
                        
                Object ocittanegozio is a cWebColumn
                    Entry_Item negozi.citta
                    Set psCaption to "Città"
                    Set piWidth to 50
                End_Object
                
               Object oComuinitaNegozio is a cWebColumn
                    Entry_Item negozi.comunita
                    Set psCaption to "Comunità"
                    Set piWidth to 50
               End_Object
               
              //  WebRegisterPath ntNavigateForward oZoomNegozio

                Procedure OnRowClick String sRowID
                    Send NavigatePath
                End_Procedure

                Procedure OnGetNavigateForwardData tWebNavigateData  ByRef NavigateData Handle hoToView
                    Move True to NavigateData.bReadOnly
                End_Procedure
            End_Object
            
        End_Object

          Object oLatestActivity_grp is a cWebGroup
            Set piColumnSpan to 8
            Set piColumnIndex to 8
            Set pbShowBorder to False
            Set pbShowCaption to False
            Set piColumnCount to 12
            Set psCSSClass to "LatestActivity"
            
            Object oLatestActivity_lbl is a cWebLabel
                Set psCaption to "Ultimi articoli"
                Set piColumnSpan to 0
                Set psCSSClass to "LabelTitle"
            End_Object
        Object oLatestActivity_list is a cWebHtmlList
                Set Server to OARTICOLISHOP_DD
                Set psCSSClass to "LatestActivity"
                Set psHtmlBefore to '<ul>'
                Set psHtmlTemplate to '<li><div class="FirstLine MinorText">{{oarticoli_Date}}</div><div class="MainText">Articolo - {{oCodicearticolo}}</div><div class="MinorText">Descrizione - {{odescrizione}}</div><div class="MainText">Comunità {{ocumunita}} </li>'
                Set psHtmlAfter to '</ul>'
                Set piLimitRows to 4
                Set pbReverseOrdering to True
                Set pbServerOnRowClick to True
                
                Object oarticoli_Date is a cWebColumn
                    Entry_Item articoli.datareg
                    Set psCaption to "data"
                    Set piWidth to 50
                End_Object
            
                Object oCodicearticolo is a cWebColumn
                    Entry_Item articoli.codarticolo
                    Set psCaption to "Codice articolo"
                    Set piWidth to 50
                End_Object
            
                Object odescrizione is a cWebColumn
                    Entry_Item articoli.descrizionesintetica
                    Set psCaption to "descrizione"
                    Set piWidth to 50
                End_Object
         
                  Object ocumunita is a cWebColumn
                    Entry_Item articoli.comunita
                    Set psCaption to "comunita"
                    Set piWidth to 50
                  End_Object 
                  
             //   WebRegisterPath ntNavigateForward oZoomOrder
                
                Procedure OnRowClick String sRowID
                //    Send NavigatePath
                End_Procedure
                
                Procedure OnGetNavigateForwardData tWebNavigateData  ByRef NavigateData Handle hoToView
                    Move True to NavigateData.bReadOnly
                End_Procedure
            End_Object

        End_Object

        Object oDynamicshop is a cWebGroup
            Set psCaption to "Ricerca articoli"
            Set piColumnCount to 12   
            
//            
//        Object oWebComboCategoria is a cWebCombo
//            Set pbAddEmptyItem to True
//            Set piColumnSpan to 4
//             WebSetResponsive piColumnSpan rmMobile to 2
//             Set pbShowLabel to False
//             
//            Set psEmptyItemDescription to (TranslateString("Tutte le categorie"))
//
//             Procedure OnFill
//                  String slanguage
//                  Forward Send OnFill
//                  WebGet pslanguage of oWebApp to slanguage
//                  Send AddComboItem -1  (TranslateString("Tutte le categorie"))
//                  For_All categoriemarketPlace by Index.2
//                    Do
//                    If (slanguage="IT") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione
//                     Else If (slanguage="DE") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_de
//                     Else If (slanguage="EN") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_en
//                     Else If (slanguage="ES") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_es
//                    Else If (slanguage="FR") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_fr
//                     Else If (slanguage="RU") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_ru
//                     Else Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione
//                      
//                  End_For_All
//             End_Procedure
//        End_Object
//        


        Object oWebFormRicerca is a cWebForm 
           
            Set pbPromptButton to True
            Set pbShowLabel to False
            Set piColumnIndex to 4
            WebSetResponsive piColumnSpan rmMobile to 4
            WebSetResponsive piColumnIndex rmMobile to 2
            
            Set pbServerOnPrompt to True
            Set piColumnSpan to 12
            Procedure onprompt 
                // ricerca sql
                stFoundProducts[] mystFoundProducts
                String sSearchstring squery scategoria
                Boolean BFOUND
                WebGet psValue to sSearchstring 
              //  WebGet psValue of oWebComboCategoria to scategoria
                If (scategoria = "") Move "-1" to scategoria
//                SELECT recordid, descrizione, descrizionefull,  MATCH (descrizione, descrizionefull) AGAINST ('prva testa 1 ' IN NATURAL LANGUAGE MODE) as score
//                 from  articolishop WHERE MATCH(descrizione,descrizionefull) AGAINST('prova testa '  IN NATURAL LANGUAGE MODE);

                         Get SQLEscapedStr of OARTICOLISHOP_DD  sSearchstring to sSearchstring 

                  Move ( "SELECT codarticolo, descrizionesintetica, descrizionecompleta, categoria, " + ;
                         "  MATCH (descrizionesintetica, descrizionecompleta) AGAINST(" + ;
                         (SFormat ("'%1 '",sSearchstring))    +;
                         "IN NATURAL LANGUAGE MODE) as score "  + ;
                         "FROM  articoli WHERE MATCH(descrizionesintetica, descrizionecompleta) AGAINST(" + ;
                          (SFormat ("'%1 '",sSearchstring))    + ;
                          "IN NATURAL LANGUAGE MODE);" ) to squery 
                    Handle    hoDoc  hostatm
                    String sid sdes srate
                    Get sqlFileConnect of osqlHandlemanager (refTable(articoli)) to hoDoc
                    If (hoDoc <> 0 ) Begin 
                        String[] avalues
                        Integer icountrow iFetchResult
                         Get SQLOpen of hoDoc to hostatm
                         Send SqlExecDirect of hostatm squery
                         Get SQLFetchRowValues of hostatm to avalues
                        
                         While ( piFetchResult(hostatm) =1)
                               Move (SizeOfArray(avalues)) to iFetchResult
                              If iFetchResult Begin
                               
                                If ( scategoria <> "-1" ) Move  (  avalues[3] = scategoria)  to bfound
                                Else Move True to bfound
                                If (pos("@",sSearchstring)) Begin 
                                    Integer itagstartpos itagEndPos
                                    String sSourceLine scity
                                      Move (pos("@",sSearchstring)) to itagstartpos
                                       Move (replace("@",sSearchstring,"|")) to sSourceLine
                                       Move (pos("@",sSourceLine)) to itagEndPos
                                       Move (mid(sSourceLine,(itagendPos-iTagStartpos-1),(itagStartPos+1)) ) to scity
                                       // 
                                End
                                If (bfound) Begin 
                                    
                                    Move avalues[0] to mystFoundProducts[icountrow].sid
                                    Move avalues[1] to mystFoundProducts[icountrow].sdes
                                    Move avalues[3] to mystFoundProducts[icountrow].icategoriaid
                                    
                                    Move (replace(".",avalues[4],",")) to mystFoundProducts[icountrow].nrate
                                       Increment icountrow
                                End
                              End
                               Get SQLFetchRowValues of hostatm to avalues
                              
                        Loop
                         Send SQLClose of hostatm
                    End
                     Send SQLDisconnect of hoDoc
                     If (scity>"" ) Begin 
                      // verifica se i prodotti trovati si trovano nella città richiesta
                     // 1) cerca proprietario articolo e in che città si trova
                     //
                     End
                     
                   WebSet pMyLocalstFoundProducts of oDashboard to mystFoundProducts
                   Send RenderFoundproducts of oWebDynamicObjectContainer3 mystFoundProducts
               
 
 
            End_Procedure 
        End_Object

        End_Object
   
        Object oWebDynamicObjectContainer3 is a cWebDynamicObjectContainer
              Set piColumnCount to 12
               Set piColumnSpan to 16
               

          Set pbRender to False 
          Procedure RenderFoundproducts stFoundProducts[] mystFoundProducts // elenco articoli ricerca full textg
                 WebSet pbRender to True
                //  WebSet pbRender of oWebDynamicObjectContainer1  to False 
                 Send ResetContainer
                 Send ShowFoundProducts mystFoundProducts
          End_Procedure
 
       
            Procedure ShowFoundProducts  stFoundProducts[] mystFoundProducts
//                Integer iCount imarkettype iqta iViewType eMode icategoriaID
//                Boolean bfound  bok
//                Date dtoday
//                Sysdate dtoday
//                String sid
//                WebGet psValue of oWebComboCategoria to icategoriaID
//                 stArticoliamazon asMyArticoliOnline
//               stShowArticoliBoxHtml  syMyShowArticoliBoxHtml
//                Handle hoGroup hoLabel hoAddBtn hoVendorGrp hoProductContainer hoImg hodesart hodesartImg hoqtyBtn
//                //WebGet  piViewMarketType of owebapp to iViewType
//
//                        Get CreateDynamicObject (RefClass(cDwCategorieGrp)) ("found_vcatdyngrp") "" to hoGroup
//                           Send InitDynamicProp of hoGroup  "psCSSClass" "Groupbordergold"
//                           
//                          Send InitDynamicProp of hoGroup "psBackgroundColor"  "white"
//                        Get CreateDynamicObject (RefClass(cDwcategorielbl)) ("found_vcatdynlbl") ("found_vcatdyngrp") to hoLabel
//                        Send InitDynamicProp of hoLabel "psCaption" (translatestring("Prodotti trovati "))
//                        Send InitDynamicProp of hoLabel  "psCSSClass" "labelboldBiggerblack"
//                         Send InitDynamicProp of hoLabel "psBackgroundColor"  "white"
//
//                        Get CreateDynamicObject (RefClass(cDwProductContainer)) ("found_pcartgrp") ("found_vcatdyngrp") to hoProductContainer 
//                         Send InitDynamicProp of hoProductContainer "psBackgroundColor"  "white"
//                          Integer icountfoundproducts i
//                  Move (SizeOfArray(mystFoundProducts)) to icountfoundproducts
//                    
//                  String sStatoArticolo
//                  WebGet piViewMarketType of oDynamicshop to iMarketType
//                  If (iMarketType=0) Move "N" to sStatoArticolo
//                  Else If (iMarketType=1) Move "U" to sStatoArticolo 
//                  
//                 For i from 0 to ( icountfoundproducts-1)
//                   Send Clear of ocategoriemarketPlace_DD
//                   Send Clear of    oarticolishop_DD
//                   Move "S" to articolishop.pubblicato
//                   Move    mystFoundProducts[i].sid   to articolishop.recordid             
//                    Send Find of oarticolishop_DD eq 1
//                     If (Found) Begin
//                        Move (articolishop.pubblicato="S") to bfound
//                        If (bfound) If (icategoriaID<>-1 ) Move ( articolishop.categoriaid =  mystFoundProducts[i].icategoriaid) to bfound
//                            
//                         If ( bfound and articolishop.stato =  sStatoArticolo ) Begin
//                          
//                                       If (articolishop.scadenza>"" and articolishop.prezzoeuro>0) Begin 
//                                         Move (dtoday<=articolishop.scadenza) to bfound   
//                                       End
//                                       Else If (articolishop.prezzoeuro>0) Move True to bfound
//                                       If  (bfound and (iViewType=VIEWTYPEMARKETC2C)) Move  (articolishop.stato="S" or Articolishop.stato="U") to bfound
//                                         
//                         End
//                         //
//                         If bfound Begin 
//                              Move (Replaces(" ", Trim(articolishop.recordid), "_")) to sId
//                        
//                            Get CreateDynamicObject (RefClass(cDwProductGrp)) (sId + "_articologrpfound") ( "found_pcartgrp") "" to hoGroup
//                                     Send InitDynamicProp of hoGroup "psBackgroundColor"  "white"
//                            Send InitDynamicProp of hoGroup "psCaption" (Trim(articolishop.recordid))
//                               WebGet peMode of ghoWebApp to eMode
//                           If ( emode  =  rmDesktop or emode = rmTablet) Send InitDynamicProp of hoGroup "piColumnIndex" (Mod(iCount, 3) * 4)
//                           Else  Send InitDynamicProp of hoGroup "piColumnIndex" 0 // (Mod(iCount, 3) *1)
//                              
//                           Get CreateDynamicObject (RefClass(cwebhtmlboxArticoloImages)) (sId + "_descimagefound") (sId + "_articologrpfound") to hodesartImg
//                             Send InitDynamicProp of hodesartImg "psBackgroundColor"  "white"
//  
//                             Get CreateDynamicObject (RefClass(cWebHtmlarticoloDes)) (sId + "_descfound") (sId + "_articologrpfound") to hodesart
//                              Send InitDynamicProp of hodesart "piarticoloselezionato" sId
//                            Send InitDynamicProp of hodesart "psBackgroundColor"  "white"
//                              Get loadstruct of   hodesartImg   to     asMyArticoliOnline 
//                              Get movestruct    of    hodesart  asMyArticoliOnline    to  syMyShowArticoliBoxHtml
//                              Send myupdatehtml of   hodesart  syMyShowArticoliBoxHtml  
//  
//                              Send myupdatehtml of   hodesartImg  syMyShowArticoliBoxHtml  
//                              
//                              If (articolishop.qtadisponibile > 0 ) Begin
//                                    Get CreateDynamicObject (RefClass(cDwProductQty)) (sId + "_qty") (sId + "_articologrpfound") to hoAddBtn
//                                       Send InitDynamicProp of hoAddBtn "psBackgroundColor"  "white"
//                                    If (articolishop.qtamultipliminimo = "S") Move articolishop.qtaminimaordinabile to iqta
//                                    Else Move 1 to iqta
//                                    Send InitDynamicProp of hoAddBtn "psValue" iqta
//                                   Send InitDynamicProp of hoAddBtn "psItemID" (Trim(articolishop.recordid))
//                                     Send InitDynamicProp of hoAddBtn "psShop" (Trim(articolishop.owner))
//                               
//                               // prezzi
//                                    
//                                    Get CreateDynamicObject (RefClass(cDwProductAdd)) (sId + "_addfound") (sId + "_articologrpfound") to hoAddBtn
//                                        Send InitDynamicProp of hoAddBtn  "psBackgroundColor"  "white"
//                                    Send InitDynamicProp of hoAddBtn "psItemID" (Trim(articolishop.recordid))
//                                    Send InitDynamicProp of hoAddBtn "psItemImg" (Trim(articolishop.immagine1))
//                                    Send InitDynamicProp of hoAddBtn "psItemDes" (Trim(articolishop.descrizione))
//                                      Send InitDynamicProp of hoAddBtn "piContataglie"  articolishop.contataglie
//                               
//                                     If   (articolishop.contataglie>0 ) Begin 
//                                        Send InitDynamicProp of hoAddBtn "psCaption" (translatestring("vai alla scheda"))
//                                        Send InitDynamicProp of hoAddBtn "piContaTaglie"  articolishop.contataglie
//    
//                                     End
//                                 
//                                    If (articolishop.scadenzapromo >=dtoday and articolishop.datainiziopromo<=dtoday  and articolishop.attivapromodcy ="S") Begin 
//                                           If (articolishop.Promodcypercento>0 )  Send InitDynamicProp of hoAddBtn "pnAddValue"  (articolishop.prezzoeuro - (articolishop.prezzoeuro * articolishop.Promodcypercento/100)) 
//                                           Else Send InitDynamicProp of hoAddBtn "pnAddValue" (Trim(articolishop.prezzoeuroduranteofferta))
//                                    End
//                                    Else Send InitDynamicProp of hoAddBtn "pnAddValue" (Trim(articolishop.prezzoeuro))
//                                      Send InitDynamicProp of hoAddBtn "psShop" (Trim(articolishop.owner))
//                                    
//            //                        
//                                   
//                              End
//                               Increment iCount
//                        End
//  
//                     End //WHILE
////                    
//                     
//                    // Send AppendDynamicObject (scatId + "_pcartgrp")
//    
//                 Loop // FOR I
//                          
// 
//   
//                 Send Activate    
                
            End_Procedure

            End_Object

 
    End_Object
    
   Procedure OnBeforeShow
        // Each time this view is shown, we will update the appropriate information.
        Send FindFromTop of oLatestActivity_list
        Send FindFromTop of oRecentComunita_list // ultimi negozi
    End_Procedure

End_Object
