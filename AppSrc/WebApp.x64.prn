Compiling Program: D:\DataFlex Projects\comunitasolidaliengine\AppSrc\WebApp.src
Memory Available: 46475284480
1>Use AllWebAppClasses.pkg
Using pre-compiled package ALLWEBAPPCLASSES.PKG
Including file: AllWebAppClasses.x64.pkd    (D:\df201\Pkg\AllWebAppClasses.x64.pkd)
34661>Use cConnection.pkg
34661>
34661>Object oApplication is a cApplication
34663>    Object oConnection is a cConnection
34665>        Use LoginEncryption.pkg
Including file: LoginEncryption.pkg    (D:\df201\Pkg\LoginEncryption.pkg)
34665>>>Use cLoginEncryption.pkg
Including file: cLoginEncryption.pkg    (D:\df201\Pkg\cLoginEncryption.pkg)
34665>>>>>Use cCryptographerEx.pkg
34665>>>>>
34665>>>>>Class cLoginEncryption is a cObject
34666>>>>>    
34666>>>>>    Procedure Construct_Object
34668>>>>>        Forward Send Construct_Object
34670>>>>>        // this must be set to a multi (40ish) character random key
34670>>>>>        Property String psEncryptPassword ""
34671>>>>>        
34671>>>>>        Object oDataCrypter is a cCryptographerEx
34673>>>>>            Set piHash to CALG_SHA_256
34674>>>>>            Set piCipher to CALG_AES_256
34675>>>>>            Set psProvider to "" //  Not providing a specific provider gives the default provider for the provider type
34676>>>>>            Set piProvider to PROV_RSA_AES
34677>>>>>        End_Object
34678>>>>>    End_Procedure
34679>>>>>    
34679>>>>>    // This can be augmented to return a password encryption key using any
34679>>>>>    // hidden mechanism desired.
34679>>>>>    Function GetEncryptionPassword Returns String
34681>>>>>        String sPassword
34681>>>>>        Get psEncryptPassword to sPassword
34682>>>>>        Function_Return sPassword
34683>>>>>    End_Function
34684>>>>>    
34684>>>>>    // Encrypts a string into an unreadable hash that can later be decrypted using DecryptKey.
34684>>>>>    //
34684>>>>>    // Params:
34684>>>>>    //   sPlainText     String to encrypt.
34684>>>>>    // Returns:
34684>>>>>    //   Base64 encoded hash.
34684>>>>>    Function EncryptPassword String sPlainText Returns String
34686>>>>>        String sEncryptPassword sBase64
34686>>>>>        UChar[] ucBinary
34687>>>>>        Pointer pBase64
34687>>>>>        Integer iVoid
34687>>>>>        
34687>>>>>        //  Encrypt Key
34687>>>>>        Get GetEncryptionPassword to sEncryptPassword
34688>>>>>        If (sEncryptPassword = "") Begin
34690>>>>>            Error DFERR_PROGRAM "No encryption password set"
34691>>>>>>
34691>>>>>        End
34691>>>>>>
34691>>>>>        
34691>>>>>        Get Encrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) (StringToUCharArray(sPlainText)) to ucBinary
34692>>>>>        
34692>>>>>        If (SizeOfArray(ucBinary) = 0) Begin
34694>>>>>            Error DFERR_PROGRAM "Unable to encrypt database login password"
34695>>>>>>
34695>>>>>            Function_Return ""
34696>>>>>        End
34696>>>>>>
34696>>>>>        
34696>>>>>        //  Encode binary hash to Base64
34696>>>>>        Move (Base64Encode(AddressOf(ucBinary), SizeOfArray(ucBinary))) to pBase64
34697>>>>>        Move (PointerToString(pBase64)) to sBase64
34698>>>>>        Move (Free(pBase64)) to iVoid
34699>>>>>        
34699>>>>>        Function_Return sBase64
34700>>>>>    End_Function
34701>>>>>    
34701>>>>>    
34701>>>>>    // Decrypts the unreadable hash generated by EncryptKey into a readable string.
34701>>>>>    //
34701>>>>>    // Params:
34701>>>>>    //   sBase64EncryptedPassword       Base64 Encrypted password
34701>>>>>    // Returns:
34701>>>>>    //   Readable plain text password
34701>>>>>    Function DecryptPassword String sBase64EncryptedPassword Returns String
34703>>>>>        String sEncryptPassword
34703>>>>>        UChar[] ucBinary ucPlain
34705>>>>>        Boolean bIsHex
34705>>>>>        Integer iLen iVoid
34705>>>>>        Pointer pBinary
34705>>>>>        
34705>>>>>        If (sBase64EncryptedPassword <> "") Begin
34707>>>>>            //  Decode from Base64
34707>>>>>            Move (Base64Decode(AddressOf(sBase64EncryptedPassword), &iLen)) to pBinary
34708>>>>>            
34708>>>>>            Move (ResizeArray(ucBinary, iLen, 0)) to ucBinary
34709>>>>>            Move (MemCopy(AddressOf(ucBinary), pBinary, iLen)) to iVoid
34710>>>>>                        
34710>>>>>            Move (Free(pBinary)) to iVoid
34711>>>>>            
34711>>>>>            //  Encrypted binary hash to string
34711>>>>>            Get GetEncryptionPassword to sEncryptPassword
34712>>>>>            Get Decrypt of oDataCrypter (StringToUCharArray(sEncryptPassword)) ucBinary to ucPlain
34713>>>>>        End
34713>>>>>>
34713>>>>>        
34713>>>>>        Function_Return (UCharArrayToString(ucPlain))
34714>>>>>    End_Function
34715>>>>>End_Class
34716>>>
34716>>>Object oLoginEncryption is a cLoginEncryption
34718>>>
34718>>>    // this must be created in your appsrc directory and must contain an encryption
34718>>>    // key that is set to psEncryptPassword. It will look something like this
34718>>>    //
34718>>>    // Set psEncryptPassword to "JchUAo7W@r.b{<Yk~OONi0nq=sMi[*Rn[A-`Vo)q"
34718>>>    //  
Including file: LoginEncryptionKey.inc    (D:\dataflex projects\comunitasolidaliengine\AppSrc\LoginEncryptionKey.inc)
34718>>>>// Studio generated login encryption key
34718>>>>Set psEncryptPassword to "{TN%u9>({3[58,@&(?OS|=gt3[{SUPCc7r=*KDt2"
34719>>>>
34719>>>    
34719>>>    // use this to register this object to your cConnection Object. This object
34719>>>    // must be created after the cConnection object
34719>>>    Move Self to ghoLoginEncryption
34720>>>End_Object
34721>    End_Object
34722>End_Object
34723>
34723>Function translatestring Global String stext Returns String
34725>    Function_Return  stext
34726>End_Function
34727>
34727>Object oWebApp is a cWebApp
34729>    Set psTheme to "Df_Material"
34730>    Set peAlignView to alignCenter
34731>    Set peLoginMode to lmLoginNone
34732>   Set pbLogWebSession to False
34733>    // It is important to set this so that all views will default
34733>    // to drill down style views.
34733>    Set peApplicationStyle to wvsDrillDown   
34734>    Set peApplicationStateMode to asmHistoryAndUrls 
34735>    Set psEncryptPassword to "_{8<B(nY~k_%>K/T:x@n#S=|QsE[W0umnS@S&|Ed"
34736>
34736>    Object oViewStack is a cWebViewStack
34738>    End_Object
34739>    
34739>    Procedure HideHeader
34742>        WebSet pbRender of oHeaderPanel to False
34743>    End_Procedure
34744>
34744>    Procedure ShowHeader
34747>        WebSet pbRender of oHeaderPanel to True 
34748>    End_Procedure
34749>
34749>    Object oHeaderPanel is a cWebPanel
34751>        Set peRegion to prTop
34752>        Set psCSSClass to "HeaderPanel"
34753>        
34753>        Object oMenuPanel is a cWebPanel
34755>            Set peRegion to prLeft
34756>            Set piWidth to 50
34757>            
34757>            Object oMenuButton is a cWebMenuButton
34759>                Set piMenuHeight to 500
34760>
34760>                Object oDashboard_itm is a cWebMenuItem
34762>                    Set psCaption to C_$Dashboard
34763>                    
34763>                    WebRegisterPath ntNavigateBegin oDashboard
34769>
34769>                    Procedure OnClick
34772>                        Send NavigatePath
34773>                    End_Procedure
34774>                End_Object
34775>
34775>//              Object oNegoziList is a cWebMenuItem 
34775>//      
34775>//                   Set psCaption to  "Trova negozi"
34775>//                      
34775>//       
34775>//                     Register_Object oListanegozi
34775>//                     // WebRegisterPath ntNavigateForward oListanegozi
34775>//        
34775>//                            
34775>//                              Procedure OnGetNavigateForwardData tWebNavigateData ByRef NavigateData Handle hoToView
34775>//                                  Move nfFromMain to NavigateData.eNavigateType
34775>//                              End_Procedure
34775>//                      
34775>//                   
34775>//                    Procedure OnClick String sId String sParam
34775>//                           Boolean BOK
34775>//                          String sReason
34775>//                          Get CanPushView of ghoWebViewStack oListanegozi (&sReason) to bOK
34775>//                           If (not(bok)) Begin 
34775>//                                          Get Reset of ghoWebViewStack True True to bok
34775>//                           End
34775>//                          If (bok) Send NavigatePath
34775>//                    End_Procedure
34775>//                    
34775>//                 End_Object
34775>
34775>                Object oViewMenu is a cWebMenuItem
34777>                    Set psCaption to C_$View
34778>                End_Object
34779>
34779>                Object oSignOut_itm is a cWebMenuItem
34781>                    Set psCaption to C_$LogOut
34782>
34782>                    Procedure OnClick
34785>                        Send RequestLogOut of ghoWebSessionManager
34786>                    End_Procedure
34787>                End_Object
34788>            End_Object  
34789>
34789>            Object oBackButton is a cWebButton
34791>                Set psCSSClass to "WebBack_Icon"
34792>                Set pbRender to False
34793>                
34793>                Procedure OnClick
34796>                    Handle hoTop
34796>                    
34796>                    Get TopViewHandle of oViewStack to hoTop
34797>                    If (hoTop > 0) Begin
34799>                        Send NavigateCancel of hoTop 
34800>                    End
34800>                End_Procedure
34801>            End_Object
34802>            
34802>            Send AddClient of oViewStack Self
34803>                
34803>            Procedure OnUpdateViewStack
34806>                Handle hoTop hoDflt
34806>                Integer eMode
34806>                Boolean bTop
34806>                
34806>                WebGet peMode of ghoWebApp to eMode
34809>                
34809>                Get TopViewHandle of oViewStack to hoTop
34810>                Get GetDefaultView to hoDflt
34811>                Move (hoTop=0 or hoTop=hoDflt) to bTop
34812>                
34812>                WebSet pbRender of oBackButton to (not(bTop) and eMode >= rmMobile)
34813>                WebSet pbRender of oMenuButton to (bTop or eMode < rmMobile)
34814>            End_Procedure
34815>
34815>        End_Object
34816>
34816>        Object oCaptionPanel is a cWebPanel
34818>            Set piColumnCount to 12
34819>
34819>            Object oCaptionBreadcrumb is a cWebBreadcrumb
34821>                Set peBreadcrumbStyle to crumbCaption
34822>                WebSetResponsive peBreadcrumbStyle rmMobile to crumbDropDown
34823>            End_Object         
34824>        End_Object
34825>        
34825>        Object oActionPanel is a cWebPanel
34827>            Set peRegion to prRight
34828>            Set piColumnCount to 1
34829>            Set piWidth to 120
34830>
34830>            Object oMainActions is a cWebActionBar
34832>                Set psGroupName to "MainActions"
34833>
34833>                Set piColumnSpan to 0
34834>                Set peAlign to alignRight
34835>            End_Object
34836>        End_Object
34837>
34837>        Object oBreadcrumbPanel is a cWebPanel
34839>            Set peRegion to prBottom
34840>            
34840>            Object oHorizontalBreadcrumb is a cWebBreadcrumb
34842>                WebSetResponsive pbRender rmMobile to False
34843>            End_Object         
34844>        End_Object
34845>
34845>    End_Object    
34846>
34846>    Use SessionManager.wo
Including file: SessionManager.wo    (D:\dataflex projects\comunitasolidaliengine\AppSrc\SessionManager.wo)
34846>>>Use cWebSessionManagerStandard.pkg
Including file: cWebSessionManagerStandard.pkg    (D:\df201\Pkg\cWebSessionManagerStandard.pkg)
34846>>>>>Use cWebSessionManager.pkg
34846>>>>>Use cWebAppSessionDataDictionary.dd
Including file: cWebAppSessionDataDictionary.dd    (D:\df201\Pkg\cWebAppSessionDataDictionary.dd)
34846>>>>>>>Use DataDict.pkg
34846>>>>>>>
34846>>>>>>>Open WebAppSession
Including file: WebAppSession.fd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\WebAppSession.fd)
34848>>>>>>>Open WebAppUser
Including file: WebAppUser.fd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\WebAppUser.fd)
34850>>>>>>>
34850>>>>>>>Class cWebAppSessionDataDictionary is a DataDictionary
34851>>>>>>>    
34851>>>>>>>    Procedure Construct_Object
34853>>>>>>>        Forward Send Construct_Object
34855>>>>>>>        Set Main_File to WebAppSession.File_Number
34856>>>>>>>
34856>>>>>>>        Set Add_Server_File to WebAppUser.File_Number
34857>>>>>>>
34857>>>>>>>        Set ParentNullAllowed WebAppUser.File_Number to True
34858>>>>>>>
34858>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
34859>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
34860>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
34861>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
34862>>>>>>>
34862>>>>>>>        Set Field_Option Field WebAppSession.Active DD_RETAIN to True
34863>>>>>>>        Set Field_Checkbox_Values Field WebAppSession.Active to "Y" "N"
34864>>>>>>>        Set Field_Error Field WebAppSession.Active to 500 "Invalid WebAppSession Active State"
34865>>>>>>>
34865>>>>>>>    End_Procedure
34866>>>>>>>
34866>>>>>>>    Procedure Creating
34868>>>>>>>        DateTime dtCurrentDateTime
34868>>>>>>>        
34868>>>>>>>        Forward Send Creating
34870>>>>>>>        
34870>>>>>>>        //  Init usecounter
34870>>>>>>>        Move 0 to WebAppSession.UseCount
34871>>>>>>>        
34871>>>>>>>        //  Set the creation and access time to the current time
34871>>>>>>>        Move (CurrentDateTime()) to dtCurrentDateTime
34872>>>>>>>    
34872>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.CreateTime
34873>>>>>>>        Get TimeToString dtCurrentDateTime to WebAppSession.LastAccessTime
34874>>>>>>>        
34874>>>>>>>        Move dtCurrentDateTime to WebAppSession.CreateDate
34875>>>>>>>        Move dtCurrentDateTime to WebAppSession.LastAccessDate
34876>>>>>>>    End_Procedure
34877>>>>>>>    
34877>>>>>>>    
34877>>>>>>>    
34877>>>>>>>    //
34877>>>>>>>    //  Converts the given time to an string that can be saved in the database.
34877>>>>>>>    //
34877>>>>>>>    //  Params:
34877>>>>>>>    //      dtTime  Time to convert
34877>>>>>>>    //  Returns:
34877>>>>>>>    //      String with "HH:MM:SS" format
34877>>>>>>>    //
34877>>>>>>>    Function TimeToString DateTime dtTime Returns String
34879>>>>>>>        String sHours sMinutes sSeconds
34879>>>>>>>        
34879>>>>>>>        //  Extract parts
34879>>>>>>>        Move (String(DateGetHour(dtTime))) to sHours
34880>>>>>>>        Move (String(DateGetMinute(dtTime))) to sMinutes
34881>>>>>>>        Move (String(DateGetSecond(dtTime))) to sSeconds
34882>>>>>>>        
34882>>>>>>>        //  Fill out with 0
34882>>>>>>>        If (Length(sHours) = 1) ;            Move ("0" + sHours) to sHours
34885>>>>>>>        If (Length(sMinutes) = 1) ;            Move ("0" + sMinutes) to sMinutes
34888>>>>>>>        If (Length(sSeconds) = 1) ;            Move ("0" + sSeconds) to sSeconds
34891>>>>>>>        
34891>>>>>>>        Function_Return (sHours + ":" + sMinutes + ":" + sSeconds)
34892>>>>>>>    End_Function
34893>>>>>>>    
34893>>>>>>>    //
34893>>>>>>>    //  Sets the time of the datetime variable to the time in the string.
34893>>>>>>>    //
34893>>>>>>>    //  Params:
34893>>>>>>>    //      dtTime  Datetime variable to add time to
34893>>>>>>>    //      sTimeString String with time in the format "HH:MM:SS"
34893>>>>>>>    //  Returns:
34893>>>>>>>    //      dtDateTime with the loaded time
34893>>>>>>>    //
34893>>>>>>>    Function StringToTime DateTime dtTime String sTimeString Returns DateTime
34895>>>>>>>        String sHours sMinutes sSeconds
34895>>>>>>>        
34895>>>>>>>        //  Extract parts
34895>>>>>>>        Move (Mid(sTimeString, 2, 1)) to sHours
34896>>>>>>>        Move (Mid(sTimeString, 2, 4)) to sMinutes
34897>>>>>>>        Move (Mid(sTimeString, 2, 7)) to sSeconds
34898>>>>>>>        
34898>>>>>>>        //  Set to DateTime
34898>>>>>>>        Move (DateSetHour(dtTime, (Integer(sHours)))) to dtTime
34899>>>>>>>        Move (DateSetMinute(dtTime, (Integer(sMinutes)))) to dtTime
34900>>>>>>>        Move (DateSetSecond(dtTime, (Integer(sSeconds)))) to dtTime
34901>>>>>>>        
34901>>>>>>>        Function_Return dtTime
34902>>>>>>>    End_Function
34903>>>>>>>
34903>>>>>>>End_Class
34904>>>>>Use cWebAppUserDataDictionary.dd
Including file: cWebAppUserDataDictionary.dd    (D:\df201\Pkg\cWebAppUserDataDictionary.dd)
34904>>>>>>>Use DataDict.pkg
34904>>>>>>>Open WebAppUser
34906>>>>>>>Open WebAppSession
34908>>>>>>>
34908>>>>>>>Class cWebAppUserDataDictionary is a DataDictionary
34909>>>>>>>    
34909>>>>>>>    Procedure Construct_Object
34911>>>>>>>        Forward Send Construct_Object
34913>>>>>>>        Set Main_File to WebAppUser.File_Number
34914>>>>>>>
34914>>>>>>>        Set Add_Client_File to WebAppSession.File_Number
34915>>>>>>>
34915>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
34916>>>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
34917>>>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
34918>>>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
34919>>>>>>>    End_Procedure
34920>>>>>>>
34920>>>>>>>End_Class
34921>>>>>
34921>>>>>Class cWebSessionManagerStandard is a cWebSessionManager
34922>>>>>    
34922>>>>>    Procedure Construct_Object
34924>>>>>        Handle hoUserDD hoSessionDD
34924>>>>>        
34924>>>>>        Forward Send Construct_Object
34926>>>>>        
34926>>>>>        Property Handle phoUserDD 0      // Handle to the WebAppUser DDO
34927>>>>>        Property Handle phoSessionDD 0   // Handle to the WebAppSession DDO        
34928>>>>>        
34928>>>>>        Get Create (RefClass(cWebAppUserDataDictionary)) to hoUserDD
34929>>>>>        Get Create (RefClass(cWebAppSessionDataDictionary)) to hoSessionDD
34930>>>>>        Set DDO_Server of hoSessionDD to hoUserDD
34931>>>>>
34931>>>>>        Set phoUserDD to hoUserDD
34932>>>>>        Set phoSessionDD to hoSessionDD
34933>>>>>        Property Boolean pbCreatingNewSession False
34934>>>>>        Property String psLoginName
34935>>>>>        Property String psUserName ""
34936>>>>>        Property Integer piUserRights 0
34937>>>>>    End_Procedure
34938>>>>>    
34938>>>>>    Function CreateSession String sRemoteAddress Returns String
34940>>>>>        String sSessionKey
34940>>>>>        Integer iErr
34940>>>>>        Boolean bLogWebSession
34940>>>>>        Handle hoSessionDD       
34940>>>>>        Get phoSessionDD to hoSessionDD
34941>>>>>        
34941>>>>>        //  Get session key
34941>>>>>        Forward Get CreateSession sRemoteAddress to sSessionKey
34943>>>>>        
34943>>>>>        Get pbLogWebSession to bLogWebSession
34944>>>>>        If not bLogWebSession Begin
34946>>>>>            Function_Return sSessionKey        
34947>>>>>        End
34947>>>>>>
34947>>>>>
34947>>>>>        //  Store session
34947>>>>>        Send Clear of hoSessionDD
34948>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.SessionKey to sSessionKey
34949>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.RemoteAddress to sRemoteAddress
34950>>>>>        Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "Y"
34951>>>>>        Get Request_Validate of hoSessionDD to iErr
34952>>>>>        If (iErr) Begin
34954>>>>>            // this should not happen. If it does its a programming error
34954>>>>>            Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
34955>>>>>>
34955>>>>>            Function_Return ""
34956>>>>>        End
34956>>>>>>
34956>>>>>        Send Request_Save of hoSessionDD
34957>>>>>        If (Err) Begin
34959>>>>>            // this shouldn't happen, if it does likely a duplicate session key issue, even through request_save already gave an error we give another one to make tracking down easier
34959>>>>>            Error DFERR_PROGRAM C_$WebAppSesionSaveFailed
34960>>>>>>
34960>>>>>            Function_Return ""
34961>>>>>        End
34961>>>>>>
34961>>>>>       
34961>>>>>        Function_Return sSessionKey        
34962>>>>>    End_Function
34963>>>>>    
34963>>>>>    
34963>>>>>    Function ValidateSession String sSessionKey Boolean bOptLoadWebApp Returns Boolean
34965>>>>>        DateTime dtLastAccess dtCurrent
34965>>>>>        TimeSpan tsDiff
34965>>>>>        Integer iErr iSessionTimeout iSpanMinutes
34965>>>>>        Boolean bResult bCreatingNewSession
34965>>>>>        Boolean bLogWebSession bLoadWebApp
34965>>>>>        Integer eLoginMode
34965>>>>>        String sTime
34965>>>>>        Handle hoSessionDD hoUserDD       
34965>>>>>        
34965>>>>>        Move False to bLoadWebApp
34966>>>>>        If (num_arguments >= 2) Begin
34968>>>>>            Move bOptLoadWebApp to bLoadWebApp
34969>>>>>        End
34969>>>>>>
34969>>>>>        
34969>>>>>        Get phoSessionDD to hoSessionDD
34970>>>>>        Get phoUserDD to hoUserDD
34971>>>>>        
34971>>>>>        Get pbLogWebSession to bLogWebSession
34972>>>>>        Get peLoginMode to eLoginMode
34973>>>>>        
34973>>>>>        // for this object, you can only disable logging if login completely is disabled
34973>>>>>        If (not(bLogWebSession) and (eLoginMode<>lmLoginNone)) Begin
34975>>>>>            Error DFERR_PROGRAM C_$WebSessionLoggingMustBeEnabled
34976>>>>>>
34976>>>>>            Function_Return False
34977>>>>>        End
34977>>>>>>
34977>>>>>
34977>>>>>        //  Clear session properties
34977>>>>>        Set psSessionKey to ""
34978>>>>>        Send UpdateSessionProperties True
34979>>>>>        
34979>>>>>        If not bLogWebSession Begin
34981>>>>>            Forward Get ValidateSession sSessionKey to bResult
34983>>>>>            Function_Return bResult
34984>>>>>        End        
34984>>>>>>
34984>>>>>        
34984>>>>>        Move False to bResult
34985>>>>>        Get piSessionTimeout to iSessionTimeout 
34986>>>>>        
34986>>>>>        //  Check if session exists
34986>>>>>        Send Clear of hoSessionDD
34987>>>>>        Move sSessionKey to WebAppSession.SessionKey
34988>>>>>        Send Find of hoSessionDD EQ Index.1
34989>>>>>            
34989>>>>>        If (Found) Begin
34991>>>>>            //  Calculate timespan between now and last access time
34991>>>>>            Move (CurrentDateTime()) to dtCurrent
34992>>>>>            Move WebAppSession.LastAccessDate to dtLastAccess
34993>>>>>            Get StringToTime of hoSessionDD dtLastAccess WebAppSession.LastAccessTime to dtLastAccess
34994>>>>>            Move (dtCurrent - dtLastAccess) to tsDiff
34995>>>>>            Move (SpanTotalMinutes(tsDiff)) to iSpanMinutes
34996>>>>>            
34996>>>>>            //  Check if session didn't time out
34996>>>>>            If (IsDateValid(dtLastAccess) and (iSessionTimeout <= 0 or (iSpanMinutes < iSessionTimeout)) and WebAppSession.Active = "Y") Begin
34998>>>>>                Forward Get ValidateSession sSessionKey to bResult
35000>>>>>                   
35000>>>>>                If (bResult) Begin
35002>>>>>                    //  Update session record
35002>>>>>                    Get TimeToString of hoSessionDD dtCurrent to sTime 
35003>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessDate to dtCurrent
35004>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.LastAccessTime to sTime
35005>>>>>                    Set Field_Changed_Value of hoSessionDD Field WebAppSession.UseCount to (WebAppSession.UseCount + 1)
35006>>>>>                    Get Request_Validate of hoSessionDD to iErr
35007>>>>>                    If (iErr) Begin
35009>>>>>                        // this should not happen. If it does its a programming error
35009>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35010>>>>>>
35010>>>>>                        Function_Return False
35011>>>>>                    End
35011>>>>>>
35011>>>>>                    Send Request_Save of hoSessionDD
35012>>>>>                    
35012>>>>>                    //  Update user properties
35012>>>>>                    Send UpdateSessionProperties False
35013>>>>>                End
35013>>>>>>
35013>>>>>            End
35013>>>>>>
35013>>>>>            Else Begin
35014>>>>>                // Test the Creating New Session Flag to protect against infinite recursion....
35014>>>>>                Get pbCreatingNewSession to bCreatingNewSession
35015>>>>>                
35015>>>>>                If (not(bCreatingNewSession)) Begin
35017>>>>>                    Set pbCreatingNewSession to True                    
35018>>>>>                    Get RecreateSession of ghoWebApp to bResult
35019>>>>>                    Set pbCreatingNewSession to False
35020>>>>>                    
35020>>>>>                    If (not(bLoadWebApp)) Begin
35022>>>>>                        Move False to bResult   //  We can only continue immediately if we were loading the webapp, other operations are not allowed!
35023>>>>>                        Error DFERR_WEBAPP_SESSION_TIMEOUT "Your application session has timed out or is inactive, please login again."
35024>>>>>>
35024>>>>>                        Send NavigateRefresh of ghoWebApp          // refresh the WebApp at the client (triggers a login)
35025>>>>>                    End
35025>>>>>>
35025>>>>>                End
35025>>>>>>
35025>>>>>            End
35025>>>>>>
35025>>>>>        End
35025>>>>>>
35025>>>>>        Else Begin
35026>>>>>            Error DFERR_WEBAPP_BAD_SESSION_KEY "Session key not known (reload page to recreate session)"
35027>>>>>>
35027>>>>>        End
35027>>>>>>
35027>>>>>        
35027>>>>>        Function_Return bResult
35028>>>>>    End_Function
35029>>>>>    
35029>>>>>    Function UserLogin String sLoginName String sPassword Returns Boolean
35031>>>>>        String sSessionKey sUserPassword
35031>>>>>        Handle hoSessionDD hoUserDD
35031>>>>>        Boolean bMatch  
35031>>>>>        
35031>>>>>        Get phoSessionDD to hoSessionDD
35032>>>>>        Get phoUserDD to hoUserDD
35033>>>>>        Integer iErr eLoginMode
35033>>>>>        
35033>>>>>        // Refind session record
35033>>>>>        Get psSessionKey to sSessionKey
35034>>>>>        Send Clear of hoSessionDD
35035>>>>>        Move sSessionKey to WebAppSession.SessionKey
35036>>>>>        Send Find of hoSessionDD EQ Index.1
35037>>>>>        
35037>>>>>        If (Found and WebAppSession.SessionKey = sSessionKey) Begin
35039>>>>>            Get peLoginMode to eLoginMode
35040>>>>>            
35040>>>>>            //  Find the user
35040>>>>>            Move sLoginName to WebAppUser.LoginName
35041>>>>>            Send Find of hoUserDD EQ Index.1
35042>>>>>            
35042>>>>>            // Check username and password
35042>>>>>            If (Found and (Lowercase(sLoginName) = Lowercase(Trim(WebAppUser.LoginName)))) Begin
35044>>>>>                Get Field_Current_Value of hoUserDD Field WebAppUser.Password to sUserPassword
35045>>>>>                Get ComparePasswords (Trim(sUserPassword)) (Trim(sPassword)) to bMatch
35046>>>>>                
35046>>>>>                If (bMatch) Begin
35048>>>>>                    // Store the login
35048>>>>>                    Set Field_Changed_Value of hoUserDD Field WebAppUser.LastLogin to (CurrentDateTime())
35049>>>>>                    Get Request_Validate of hoSessionDD to iErr
35050>>>>>                    If (iErr) Begin
35052>>>>>                        // this should not happen. If it does its a programming error
35052>>>>>                        Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35053>>>>>>
35053>>>>>                        Function_Return False
35054>>>>>                    End
35054>>>>>>
35054>>>>>                    
35054>>>>>                    Send Request_Save of hoSessionDD
35055>>>>>                    
35055>>>>>                    // Update session properties
35055>>>>>                    Send UpdateSessionProperties False
35056>>>>>                    Send NotifyChangeRights
35057>>>>>                    Function_Return True
35058>>>>>                End
35058>>>>>>
35058>>>>>                Else Begin
35059>>>>>                    //  We should rely directly on this buffer elsewhere but just be sure
35059>>>>>                    Send Clear of hoUserDD
35060>>>>>                End
35060>>>>>>
35060>>>>>            End
35060>>>>>>
35060>>>>>        End
35060>>>>>>
35060>>>>>          
35060>>>>>        Function_Return False
35061>>>>>    End_Function
35062>>>>>    
35062>>>>>    Function IsLoggedIn Returns Boolean
35064>>>>>        String sLoginName
35064>>>>>        Boolean bLogWebSession bLoggedIn
35064>>>>>        
35064>>>>>        Get pbLogWebSession to bLogWebSession
35065>>>>>        If not bLogWebSession Begin
35067>>>>>            Forward Get IsLoggedIn to bLoggedIn
35069>>>>>            Function_Return bLoggedIn
35070>>>>>        End
35070>>>>>>
35070>>>>>        
35070>>>>>        Get psLoginName to sLoginName
35071>>>>>        
35071>>>>>        Function_Return (sLoginName <> "")
35072>>>>>    End_Function
35073>>>>>    
35073>>>>>    
35073>>>>>    //
35073>>>>>    // This procedure is called when validating a session and after logging in. Its purpose is to 
35073>>>>>    // update properties based on the session and user data. Augment this function to update 
35073>>>>>    // properties based on the session / user table. Note that WebAppUser and WebAppSession contain
35073>>>>>    // the right records when this procedure is called.
35073>>>>>    //
35073>>>>>    // Params:
35073>>>>>    //      bClear   True if the procedure is called before session validation to clear properties.
35073>>>>>    //
35073>>>>>    Procedure UpdateSessionProperties Boolean bClear
35075>>>>>        Handle hoUserDD
35075>>>>>        
35075>>>>>        Get phoUserDD to hoUserDD
35076>>>>>        
35076>>>>>        //  Update user properties
35076>>>>>        If (not(bClear) and HasRecord(hoUserDD)) Begin
35078>>>>>            Set psUsername to (Trim(WebAppUser.FullName))
35079>>>>>            Set psLoginName to (Trim(WebAppUser.LoginName))
35080>>>>>            Set piUserRights to WebAppUser.Rights
35081>>>>>            
35081>>>>>            Send OnSessionPropertiesSet 
35082>>>>>        End
35082>>>>>>
35082>>>>>        Else Begin
35083>>>>>            Set psUsername to ""
35084>>>>>            Set psLoginName to ""
35085>>>>>            Set piUserRights to 0
35086>>>>>            
35086>>>>>            Send OnSessionPropertiesClear
35087>>>>>        End
35087>>>>>>
35087>>>>>    End_Procedure
35088>>>>>    
35088>>>>>    //
35088>>>>>    // This function is called to perform the password comparison. It gets the entered password and
35088>>>>>    // the password value of the user table as parameters. The WebAppUser buffer will contain the
35088>>>>>    // right record. This function can be augmented to implement security features like storing the
35088>>>>>    // password as a hashed value.
35088>>>>>    //
35088>>>>>    // Params:
35088>>>>>    //      sUserPassword       Value of the WebAppUser.Password field.
35088>>>>>    //      sEnteredPassword    Value entered on the login screen during login.
35088>>>>>    //
35088>>>>>    Function ComparePasswords String sUserPassword String sEnteredPassword Returns Boolean
35090>>>>>        Function_Return (sUserPassword = sEnteredPassword)
35091>>>>>    End_Function
35092>>>>>    
35092>>>>>    Procedure OnSessionPropertiesSet
35094>>>>>        //  Empty event stub
35094>>>>>    End_Procedure
35095>>>>>    
35095>>>>>    Procedure OnSessionPropertiesClear
35097>>>>>        //  Empty event stub
35097>>>>>    End_Procedure
35098>>>>>    
35098>>>>>    Procedure EndSession
35100>>>>>        Integer iErr
35100>>>>>        Boolean bLogWebSession
35100>>>>>        Handle hoSessionDD       
35100>>>>>        
35100>>>>>        Get phoSessionDD to hoSessionDD
35101>>>>>        Get pbLogWebSession to bLogWebSession
35102>>>>>        If not bLogWebSession Begin
35104>>>>>            Forward Send EndSession
35106>>>>>            Procedure_Return
35107>>>>>        End
35107>>>>>>
35107>>>>>            
35107>>>>>        //  Check if session exists
35107>>>>>        Send Clear of hoSessionDD
35108>>>>>        Get psSessionKey to WebAppSession.SessionKey
35109>>>>>        
35109>>>>>        Send Find of hoSessionDD EQ Index.1
35110>>>>>        If (Found) Begin
35112>>>>>            Set Field_Changed_Value of hoSessionDD Field WebAppSession.Active to "N"
35113>>>>>            Get Request_Validate of hoSessionDD to iErr
35114>>>>>            If (iErr) Begin
35116>>>>>                // this should not happen. If it does its a programming error
35116>>>>>                Error DFERR_PROGRAM C_$WebAppSesionValidateFailed
35117>>>>>>
35117>>>>>                Procedure_Return
35118>>>>>            End
35118>>>>>>
35118>>>>>            Send Request_Save of hoSessionDD
35119>>>>>        End
35119>>>>>>
35119>>>>>    End_Procedure
35120>>>>>
35120>>>>>End_Class
35121>>>>>
35121>>>
35121>>>Object oSessionManager is a cWebSessionManagerStandard
35123>>>End_Object
35124>>>
35124>>>
35124>    Use Login.wo
Including file: Login.wo    (D:\dataflex projects\comunitasolidaliengine\AppSrc\Login.wo)
35124>>>Use cWebView.pkg
35124>>>Use cWebForm.pkg
35124>>>Use cWebButton.pkg
35124>>>Use cWebPanel.pkg
35124>>>Use cWebLabel.pkg
35124>>>Use cWebSpacer.pkg
35124>>>Use cWebImage.pkg
35124>>>
35124>>>Object oLogin is a cWebView
35126>>>    Set piMinWidth to 250
35127>>>    Set piMaxWidth to 420
35128>>>    Set pbLoginModeEnforced to False
35129>>>    Set piColumnCount to 12
35130>>>    Set psCSSClass to "LoginView"
35131>>>    Set pbServerOnSubmit to True
35132>>>    
35132>>>    Set psStateViewName to "Login"
35133>>>    Set pbStateReplace to True  // Always replace the state so the login never becomes its own history item
35134>>>    
35134>>>    Property String psPrevStateHash ""  // Remember the state hash that the user navigated too so we can redirect after login
35138>>>    
35138>>>    Delegate Set phoLoginView to Self
35140>>>    
35140>>>    Object oTopSpacer is a cWebSpacer
35142>>>        Set pbFillHeight to True
35143>>>        Set piColumnSpan to 12
35144>>>    End_Object
35145>>>    
35145>>>    Object oWarning is a cWebLabel
35147>>>        Set pbVisible to False
35148>>>        Set psCaption to "Invalid User ID or password. \n\rHint: 'Guest' & 'guest'."
35149>>>        Set peAlign to alignCenter
35150>>>        Set piColumnSpan to 12
35151>>>        Set psCSSClass to "LoginWarning"
35152>>>    End_Object
35153>>>    
35153>>>    Object oLogo is a cWebImage
35155>>>        Set piColumnSpan to 10
35156>>>        Set psUrl to "images/DF_Logo_Retina.png"
35157>>>        Set pePosition to wiFit
35158>>>        Set piColumnIndex to 1
35159>>>        Set piHeight to 160
35160>>>        
35160>>>        WebSetResponsive piHeight rmMobile to 100  // Best for small smart phones
35161>>>    End_Object
35162>>>    
35162>>>    Object oLoginName is a cWebForm
35164>>>        Set psLabel to "User ID:"
35165>>>        Set peLabelPosition to lpTop
35166>>>        Set piMaxLength to 20
35167>>>        Set piColumnIndex to 1
35168>>>        Set pbShowLabel to False
35169>>>        Set psPlaceHolder to "loginname"
35170>>>        Set piColumnSpan to 10
35171>>>        Set psAutoComplete to "username"
35172>>>    End_Object
35173>>>    
35173>>>    Object oPassword is a cWebForm
35175>>>        Set psLabel to "Password:"
35176>>>        Set pbPassword to True
35177>>>        Set peLabelAlign to alignLeft
35178>>>        Set piMaxLength to 20
35179>>>        Set peLabelPosition to lpTop
35180>>>        Set pbShowLabel to False
35181>>>        Set psPlaceHolder to "password"
35182>>>        Set piColumnSpan to 10
35183>>>        Set piColumnIndex to 1
35184>>>        Set psAutoComplete to "current-password"
35185>>>    End_Object
35186>>>    
35186>>>    Object oWebSpacer1 is a cWebSpacer
35188>>>        Set piColumnSpan to 12
35189>>>        Set piHeight to 10
35190>>>    End_Object
35191>>>    
35191>>>    Object oLoginButton is a cWebButton
35193>>>        Set pbShowLabel to False
35194>>>        Set psCaption to "sign in"
35195>>>        Set pbServerOnClick to True
35196>>>        Set piColumnSpan to 10
35197>>>        Set piColumnIndex to 1
35198>>>        
35198>>>        Procedure OnClick
35201>>>            Send DoLogin
35202>>>        End_Procedure
35203>>>    End_Object
35204>>>    
35204>>>    Object oBottomSpacer is a cWebSpacer
35206>>>        Set pbFillHeight to True
35207>>>        Set piColumnSpan to 12
35208>>>    End_Object
35209>>>    
35209>>>    Procedure DoLogin
35212>>>        String sLoginName sPassword sPrevStateHash
35212>>>        Boolean bResult
35212>>>        
35212>>>        WebGet psValue of oLoginName to sLoginName
35215>>>        WebGet psValue of oPassword to sPassword
35218>>>        
35218>>>        Get UserLogin of ghoWebSessionManager sLoginName sPassword to bResult
35219>>>        
35219>>>        If (bResult) Begin
35221>>>            Send Hide of oLogin
35222>>>            Send ShowHeader of ghoWebApp
35223>>>            WebSet psCSSClass of ghoWebApp to ""
35224>>>            
35224>>>            WebGet psPrevStateHash to sPrevStateHash
35227>>>            Send NavigateToStateHash of ghoWebApp sPrevStateHash True
35228>>>            
35228>>>            // clear the login values. we don't want to return the login id & password as synchronized properties....
35228>>>            WebSet psValue of oLoginName to ""
35229>>>            WebSet psValue of oPassword  to ""
35230>>>            WebSet pbVisible of oWarning to False
35231>>>        End
35231>>>>
35231>>>        Else Begin
35232>>>            WebSet pbVisible of oWarning to True
35233>>>        End
35233>>>>
35233>>>    End_Procedure
35234>>>    
35234>>>    Procedure OnSubmit
35237>>>        Send DoLogin
35238>>>    End_Procedure
35239>>>    
35239>>>    Procedure OnLoad
35242>>>        String sPrevStateHash sView
35242>>>        
35242>>>        Forward Send OnLoad
35244>>>        
35244>>>        //  Store the current state so we can go back to that later (only if it points to a different view)
35244>>>        Get StateHash of ghoWebApp to sPrevStateHash
35245>>>        Send ParseViewStateHash sPrevStateHash (&sView)
35246>>>        If (Lowercase(sView) <> Lowercase(psStateViewName(Self))) Begin
35248>>>            WebSet psPrevStateHash to sPrevStateHash
35249>>>        End
35249>>>>
35249>>>        
35249>>>    End_Procedure
35250>>>    
35250>>>    Procedure OnBeforeShow
35253>>>        //  Hide header & apply nice background style
35253>>>        Send HideHeader to ghoWebApp
35254>>>        WebSet psCSSClass of ghoWebApp to "LoginBackground"
35255>>>    End_Procedure
35256>>>    
35256>>>End_Object
35257>>>
35257>>>
35257>>>
35257>>>
35257>    Use WebResourceManager.wo
Including file: WebResourceManager.wo    (D:\dataflex projects\comunitasolidaliengine\AppSrc\WebResourceManager.wo)
35257>>>Use cWebResourceManager.pkg
35257>>>
35257>>>Object oWebResourceManager is a cWebResourceManager
35259>>>End_Object
35260>    
35260>    Use Dashboard.wo
Including file: Dashboard.wo    (D:\dataflex projects\comunitasolidaliengine\AppSrc\Dashboard.wo)
35260>>>Use cWebView.pkg
35260>>>Use cWebPanel.pkg
35260>>>Use cWebForm.pkg
35260>>>Use cWebButton.pkg
35260>>>Use cWebGroup.pkg
35260>>>Use cWebSpacer.pkg
35260>>>Use cWebHtmlBox.pkg
35260>>>Use cWebMenuGroup.pkg
35260>>>Use cWebMenuItem.pkg
35260>>>Use cWebLabel.pkg
35260>>>Use cWebList.pkg
35260>>>Use cWebColumn.pkg
35260>>>Use carticoliDataDictionary.dd
Including file: carticoliDataDictionary.dd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\carticoliDataDictionary.dd)
35260>>>>>Use DataDict.pkg
35260>>>>>
35260>>>>>Open articoli
Including file: articoli.fd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\articoli.fd)
35262>>>>>
35262>>>>>Class carticoliDataDictionary is a DataDictionary
35263>>>>>    
35263>>>>>    Procedure Construct_Object
35265>>>>>        Forward Send Construct_Object
35267>>>>>        Set Main_File to articoli.File_Number
35268>>>>>
35268>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
35269>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
35270>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
35271>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
35272>>>>>
35272>>>>>    End_Procedure
35273>>>>>    
35273>>>>>    Procedure creating
35275>>>>>        Forward Send Creating
35277>>>>>        Date dtoday
35277>>>>>        Sysdate dtoday
35278>>>>>        Move dtoday to articoli.datareg
35279>>>>>        
35279>>>>>    End_Procedure
35280>>>>>
35280>>>>>End_Class
35281>>>Use cnegoziDataDictionary.dd
Including file: cnegoziDataDictionary.dd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\cnegoziDataDictionary.dd)
35281>>>>>Use DataDict.pkg
35281>>>>>
35281>>>>>Open negozi
Including file: negozi.fd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\negozi.fd)
35283>>>>>Open sistema
Including file: sistema.fd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\sistema.fd)
35285>>>>>
35285>>>>>Class cnegoziDataDictionary is a DataDictionary
35286>>>>>    
35286>>>>>    Procedure Construct_Object
35288>>>>>        Forward Send Construct_Object
35290>>>>>        Set Main_File to negozi.File_Number
35291>>>>>
35291>>>>>        Set Add_System_File to sistema.File_Number DD_Lock_On_All
35292>>>>>
35292>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
35293>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
35294>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
35295>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
35296>>>>>
35296>>>>>        Set Field_Auto_Increment Field negozi.recordid to File_Field sistema.contatorenegozi
35297>>>>>
35297>>>>>    End_Procedure
35298>>>>>    
35298>>>>>    Procedure creating
35300>>>>>        Forward Send Creating
35302>>>>>        Date dtoday
35302>>>>>        Sysdate dtoday
35303>>>>>        Move dtoday to negozi.datareg
35304>>>>>        
35304>>>>>    End_Procedure
35305>>>>>
35305>>>>>End_Class
35306>>>
35306>>> 
35306>>> Struct stFoundProducts
35306>>>    String sid
35306>>>    String sdes
35306>>>    Number nrate
35306>>>    Integer icategoriaid
35306>>>    String scity
35306>>> End_Struct
35306>>>
35306>>>Use sql.pkg
35306>>> 
35306>>>Object oDashboard is a cWebView
35308>>>    Object onegozi_DD is a cnegoziDataDictionary
35310>>>    End_Object
35311>>>
35311>>>    Object OARTICOLISHOP_DD is a carticoliDataDictionary
35313>>>    End_Object
35314>>>
35314>>>    Object oSqlHandleManager is a cSQLHandleManager
35316>>>    End_Object
35317>>>    
35317>>>    Set Main_DD to OARTICOLISHOP_DD
35318>>>    Set Server to OARTICOLISHOP_DD
35319>>>
35319>>>     Property  stFoundProducts[] pMyLocalstFoundProducts
35322>>>     
35322>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
35322>>>    // Add a DDO Structure 
35322>>>    //
35322>>>    // There is no need to synchronize a DD structure on the client so we do
35322>>>    // not set the Server property or send ADDOStructure. We will simply use
35322>>>    // DDO's to mine data and generate HTML for our cWebHTMLBox objects.
35322>>>    // It is the HTML in these objects that is sent to the client each time 
35322>>>    // this page is shown.
35322>>>    //
35322>>>    // Also, it is important for the drill-down Navigation interface that we
35322>>>    // do not set the Server property to some DDO because this will affect 
35322>>>    // constraints in the next view that we navigate to.
35322>>>    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
35322>>>
35322>>>    Set piMaxWidth to 1024
35323>>>    
35323>>>    Set psCaption to "Dashboard"
35324>>>    Set peViewType to vtUndefined
35325>>>    Set pbShowCaption to False
35326>>>    Set psCSSClass to "Dashboard"
35327>>>    
35327>>>    Object oWebMainPanel is a cWebPanel
35329>>>        Set piColumnCount to 24
35330>>>        
35330>>>        // - - - - - - - - - - - - - - -
35330>>>        // Main Panel's Responsive Rules
35330>>>        // - - - - - - - - - - - - - - -
35330>>>        WebSetResponsive piColumnCount rmMobile to 1
35331>>>        WebSetResponsive piColumnCount rmTabletPortrait to 16
35332>>>        
35332>>>          Object oRecentComunita_grp is a cWebGroup
35334>>>            Set piColumnSpan to 8
35335>>>            Set pbShowBorder to False
35336>>>            Set pbShowCaption to False
35337>>>            Set piColumnCount to 12
35338>>>            Set psCSSClass to "RecentList"
35339>>>            
35339>>>            Object oRecentCustomers_lbl is a cWebLabel
35341>>>                Set psCaption to "Nuovi Negozi"
35342>>>                Set piColumnSpan to 0
35343>>>                Set psCSSClass to "LabelTitle"
35344>>>            End_Object
35345>>>
35345>>>            Object oRecentComunita_list is a cWebHtmlList
35347>>>                Set Server to onegozi_DD
35348>>>                Set psCSSClass to "LatestActivity"
35349>>>                Set psHtmlBefore to '<ul>'
35350>>>                  Set psHtmlTemplate to '<li><div class="FirstLine MinorText">{{odatanegozio}}</div><div class="MainText">{{oNomenegozio}}</div><div class="MinorText">città - {{ocittanegozio}}</div><div class="MainText">Comunità {{oComuinitaNegozio}} </li>'
35351>>>   
35351>>>                Set psHtmlAfter to '</ul>'
35352>>>                Set piLimitRows to 8
35353>>>                Set pbServerOnRowClick to True
35354>>>                Set piOrdering to 1
35355>>>                Set pbReverseOrdering to True
35356>>>    
35356>>>               Object odatanegozio is a cWebColumn
35358>>>                    Entry_Item negozi.datareg
35359>>>                    Set psCaption to "data"
35360>>>                    Set piWidth to 50
35361>>>                   End_Object
35362>>>                    
35362>>>                Object oNomenegozio is a cWebColumn
35364>>>                    Entry_Item negozi.nomenegozio
35365>>>                    Set psCaption to "Nome negozio"
35366>>>                    Set piWidth to 50
35367>>>                End_Object
35368>>>        
35368>>>                        
35368>>>                Object ocittanegozio is a cWebColumn
35370>>>                    Entry_Item negozi.citta
35371>>>                    Set psCaption to "Città"
35372>>>                    Set piWidth to 50
35373>>>                End_Object
35374>>>                
35374>>>               Object oComuinitaNegozio is a cWebColumn
35376>>>                    Entry_Item negozi.comunita
35377>>>                    Set psCaption to "Comunità"
35378>>>                    Set piWidth to 50
35379>>>               End_Object
35380>>>               
35380>>>              //  WebRegisterPath ntNavigateForward oZoomNegozio
35380>>>
35380>>>                Procedure OnRowClick String sRowID
35383>>>                    Send NavigatePath
35384>>>                End_Procedure
35385>>>
35385>>>                Procedure OnGetNavigateForwardData tWebNavigateData  ByRef NavigateData Handle hoToView
35388>>>                    Move True to NavigateData.bReadOnly
35389>>>                End_Procedure
35390>>>            End_Object
35391>>>            
35391>>>        End_Object
35392>>>
35392>>>          Object oLatestActivity_grp is a cWebGroup
35394>>>            Set piColumnSpan to 8
35395>>>            Set piColumnIndex to 8
35396>>>            Set pbShowBorder to False
35397>>>            Set pbShowCaption to False
35398>>>            Set piColumnCount to 12
35399>>>            Set psCSSClass to "LatestActivity"
35400>>>            
35400>>>            Object oLatestActivity_lbl is a cWebLabel
35402>>>                Set psCaption to "Ultimi articoli"
35403>>>                Set piColumnSpan to 0
35404>>>                Set psCSSClass to "LabelTitle"
35405>>>            End_Object
35406>>>        Object oLatestActivity_list is a cWebHtmlList
35408>>>                Set Server to OARTICOLISHOP_DD
35409>>>                Set psCSSClass to "LatestActivity"
35410>>>                Set psHtmlBefore to '<ul>'
35411>>>                Set psHtmlTemplate to '<li><div class="FirstLine MinorText">{{oarticoli_Date}}</div><div class="MainText">Articolo - {{oCodicearticolo}}</div><div class="MinorText">Descrizione - {{odescrizione}}</div><div class="MainText">Comunità {{ocumunita}} </li>'
35412>>>                Set psHtmlAfter to '</ul>'
35413>>>                Set piLimitRows to 4
35414>>>                Set pbReverseOrdering to True
35415>>>                Set pbServerOnRowClick to True
35416>>>                
35416>>>                Object oarticoli_Date is a cWebColumn
35418>>>                    Entry_Item articoli.datareg
35419>>>                    Set psCaption to "data"
35420>>>                    Set piWidth to 50
35421>>>                End_Object
35422>>>            
35422>>>                Object oCodicearticolo is a cWebColumn
35424>>>                    Entry_Item articoli.codarticolo
35425>>>                    Set psCaption to "Codice articolo"
35426>>>                    Set piWidth to 50
35427>>>                End_Object
35428>>>            
35428>>>                Object odescrizione is a cWebColumn
35430>>>                    Entry_Item articoli.descrizionesintetica
35431>>>                    Set psCaption to "descrizione"
35432>>>                    Set piWidth to 50
35433>>>                End_Object
35434>>>         
35434>>>                  Object ocumunita is a cWebColumn
35436>>>                    Entry_Item articoli.comunita
35437>>>                    Set psCaption to "comunita"
35438>>>                    Set piWidth to 50
35439>>>                  End_Object 
35440>>>                  
35440>>>             //   WebRegisterPath ntNavigateForward oZoomOrder
35440>>>                
35440>>>                Procedure OnRowClick String sRowID
35443>>>                //    Send NavigatePath
35443>>>                End_Procedure
35444>>>                
35444>>>                Procedure OnGetNavigateForwardData tWebNavigateData  ByRef NavigateData Handle hoToView
35447>>>                    Move True to NavigateData.bReadOnly
35448>>>                End_Procedure
35449>>>            End_Object
35450>>>
35450>>>        End_Object
35451>>>
35451>>>        Object oDynamicshop is a cWebGroup
35453>>>            Set psCaption to "Ricerca articoli"
35454>>>            Set piColumnCount to 12   
35455>>>            
35455>>>//            
35455>>>//        Object oWebComboCategoria is a cWebCombo
35455>>>//            Set pbAddEmptyItem to True
35455>>>//            Set piColumnSpan to 4
35455>>>//             WebSetResponsive piColumnSpan rmMobile to 2
35455>>>//             Set pbShowLabel to False
35455>>>//             
35455>>>//            Set psEmptyItemDescription to (TranslateString("Tutte le categorie"))
35455>>>//
35455>>>//             Procedure OnFill
35455>>>//                  String slanguage
35455>>>//                  Forward Send OnFill
35455>>>//                  WebGet pslanguage of oWebApp to slanguage
35455>>>//                  Send AddComboItem -1  (TranslateString("Tutte le categorie"))
35455>>>//                  For_All categoriemarketPlace by Index.2
35455>>>//                    Do
35455>>>//                    If (slanguage="IT") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione
35455>>>//                     Else If (slanguage="DE") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_de
35455>>>//                     Else If (slanguage="EN") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_en
35455>>>//                     Else If (slanguage="ES") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_es
35455>>>//                    Else If (slanguage="FR") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_fr
35455>>>//                     Else If (slanguage="RU") Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione_ru
35455>>>//                     Else Send AddComboItem categoriemarketPlace.recordid categoriemarketPlace.descrizione
35455>>>//                      
35455>>>//                  End_For_All
35455>>>//             End_Procedure
35455>>>//        End_Object
35455>>>//        
35455>>>
35455>>>
35455>>>        Object oWebFormRicerca is a cWebForm 
35457>>>           
35457>>>            Set pbPromptButton to True
35458>>>            Set pbShowLabel to False
35459>>>            Set piColumnIndex to 4
35460>>>            WebSetResponsive piColumnSpan rmMobile to 4
35461>>>            WebSetResponsive piColumnIndex rmMobile to 2
35462>>>            
35462>>>            Set pbServerOnPrompt to True
35463>>>            Set piColumnSpan to 12
35464>>>            Procedure onprompt 
35467>>>                // ricerca sql
35467>>>                stFoundProducts[] mystFoundProducts
35467>>>                stFoundProducts[] mystFoundProducts
35468>>>                String sSearchstring squery scategoria
35468>>>                Boolean BFOUND
35468>>>                WebGet psValue to sSearchstring 
35471>>>              //  WebGet psValue of oWebComboCategoria to scategoria
35471>>>                If (scategoria = "") Move "-1" to scategoria
35474>>>//                SELECT recordid, descrizione, descrizionefull,  MATCH (descrizione, descrizionefull) AGAINST ('prva testa 1 ' IN NATURAL LANGUAGE MODE) as score
35474>>>//                 from  articolishop WHERE MATCH(descrizione,descrizionefull) AGAINST('prova testa '  IN NATURAL LANGUAGE MODE);
35474>>>
35474>>>                         Get SQLEscapedStr of OARTICOLISHOP_DD  sSearchstring to sSearchstring 
35475>>>
35475>>>                  Move ( "SELECT codarticolo, descrizionesintetica, descrizionecompleta, categoria, " + ;                         "  MATCH (descrizionesintetica, descrizionecompleta) AGAINST(" + ;                         (SFormat ("'%1 '",sSearchstring))    +;                         "IN NATURAL LANGUAGE MODE) as score "  + ;                         "FROM  articoli WHERE MATCH(descrizionesintetica, descrizionecompleta) AGAINST(" + ;                          (SFormat ("'%1 '",sSearchstring))    + ;                          "IN NATURAL LANGUAGE MODE);" ) to squery 
35476>>>                    Handle    hoDoc  hostatm
35476>>>                    String sid sdes srate
35476>>>                    Get sqlFileConnect of osqlHandlemanager (refTable(articoli)) to hoDoc
35477>>>                    If (hoDoc <> 0 ) Begin 
35479>>>                        String[] avalues
35480>>>                        Integer icountrow iFetchResult
35480>>>                         Get SQLOpen of hoDoc to hostatm
35481>>>                         Send SqlExecDirect of hostatm squery
35482>>>                         Get SQLFetchRowValues of hostatm to avalues
35483>>>                        
35483>>>                         While ( piFetchResult(hostatm) =1)
35487>>>                               Move (SizeOfArray(avalues)) to iFetchResult
35488>>>                              If iFetchResult Begin
35490>>>                               
35490>>>                                If ( scategoria <> "-1" ) Move  (  avalues[3] = scategoria)  to bfound
35493>>>                                Else Move True to bfound
35495>>>                                If (pos("@",sSearchstring)) Begin 
35497>>>                                    Integer itagstartpos itagEndPos
35497>>>                                    String sSourceLine scity
35497>>>                                      Move (pos("@",sSearchstring)) to itagstartpos
35498>>>                                       Move (replace("@",sSearchstring,"|")) to sSourceLine
35499>>>                                       Move (pos("@",sSourceLine)) to itagEndPos
35500>>>                                       Move (mid(sSourceLine,(itagendPos-iTagStartpos-1),(itagStartPos+1)) ) to scity
35501>>>                                       // 
35501>>>                                End
35501>>>>
35501>>>                                If (bfound) Begin 
35503>>>                                    
35503>>>                                    Move avalues[0] to mystFoundProducts[icountrow].sid
35504>>>                                    Move avalues[1] to mystFoundProducts[icountrow].sdes
35505>>>                                    Move avalues[3] to mystFoundProducts[icountrow].icategoriaid
35506>>>                                    
35506>>>                                    Move (replace(".",avalues[4],",")) to mystFoundProducts[icountrow].nrate
35507>>>                                       Increment icountrow
35508>>>                                End
35508>>>>
35508>>>                              End
35508>>>>
35508>>>                               Get SQLFetchRowValues of hostatm to avalues
35509>>>                              
35509>>>                        Loop
35510>>>>
35510>>>                         Send SQLClose of hostatm
35511>>>                    End
35511>>>>
35511>>>                     Send SQLDisconnect of hoDoc
35512>>>                     If (scity>"" ) Begin 
35514>>>                      // verifica se i prodotti trovati si trovano nella città richiesta
35514>>>                     // 1) cerca proprietario articolo e in che città si trova
35514>>>                     //
35514>>>                     End
35514>>>>
35514>>>                     
35514>>>                   WebSet pMyLocalstFoundProducts of oDashboard to mystFoundProducts
35515>>>                   Send RenderFoundproducts of oWebDynamicObjectContainer3 mystFoundProducts
35516>>>               
35516>>> 
35516>>> 
35516>>>            End_Procedure 
35517>>>        End_Object
35518>>>
35518>>>        End_Object
35519>>>   
35519>>>        Object oWebDynamicObjectContainer3 is a cWebDynamicObjectContainer
35521>>>              Set piColumnCount to 12
35522>>>               Set piColumnSpan to 16
35523>>>               
35523>>>
35523>>>          Set pbRender to False 
35524>>>          Procedure RenderFoundproducts stFoundProducts[] mystFoundProducts // elenco articoli ricerca full textg
35527>>>                 WebSet pbRender to True
35528>>>                //  WebSet pbRender of oWebDynamicObjectContainer1  to False 
35528>>>                 Send ResetContainer
35529>>>                 Send ShowFoundProducts mystFoundProducts
35530>>>          End_Procedure
35531>>> 
35531>>>       
35531>>>            Procedure ShowFoundProducts  stFoundProducts[] mystFoundProducts
35534>>>//                Integer iCount imarkettype iqta iViewType eMode icategoriaID
35534>>>//                Boolean bfound  bok
35534>>>//                Date dtoday
35534>>>//                Sysdate dtoday
35534>>>//                String sid
35534>>>//                WebGet psValue of oWebComboCategoria to icategoriaID
35534>>>//                 stArticoliamazon asMyArticoliOnline
35534>>>//               stShowArticoliBoxHtml  syMyShowArticoliBoxHtml
35534>>>//                Handle hoGroup hoLabel hoAddBtn hoVendorGrp hoProductContainer hoImg hodesart hodesartImg hoqtyBtn
35534>>>//                //WebGet  piViewMarketType of owebapp to iViewType
35534>>>//
35534>>>//                        Get CreateDynamicObject (RefClass(cDwCategorieGrp)) ("found_vcatdyngrp") "" to hoGroup
35534>>>//                           Send InitDynamicProp of hoGroup  "psCSSClass" "Groupbordergold"
35534>>>//                           
35534>>>//                          Send InitDynamicProp of hoGroup "psBackgroundColor"  "white"
35534>>>//                        Get CreateDynamicObject (RefClass(cDwcategorielbl)) ("found_vcatdynlbl") ("found_vcatdyngrp") to hoLabel
35534>>>//                        Send InitDynamicProp of hoLabel "psCaption" (translatestring("Prodotti trovati "))
35534>>>//                        Send InitDynamicProp of hoLabel  "psCSSClass" "labelboldBiggerblack"
35534>>>//                         Send InitDynamicProp of hoLabel "psBackgroundColor"  "white"
35534>>>//
35534>>>//                        Get CreateDynamicObject (RefClass(cDwProductContainer)) ("found_pcartgrp") ("found_vcatdyngrp") to hoProductContainer 
35534>>>//                         Send InitDynamicProp of hoProductContainer "psBackgroundColor"  "white"
35534>>>//                          Integer icountfoundproducts i
35534>>>//                  Move (SizeOfArray(mystFoundProducts)) to icountfoundproducts
35534>>>//                    
35534>>>//                  String sStatoArticolo
35534>>>//                  WebGet piViewMarketType of oDynamicshop to iMarketType
35534>>>//                  If (iMarketType=0) Move "N" to sStatoArticolo
35534>>>//                  Else If (iMarketType=1) Move "U" to sStatoArticolo 
35534>>>//                  
35534>>>//                 For i from 0 to ( icountfoundproducts-1)
35534>>>//                   Send Clear of ocategoriemarketPlace_DD
35534>>>//                   Send Clear of    oarticolishop_DD
35534>>>//                   Move "S" to articolishop.pubblicato
35534>>>//                   Move    mystFoundProducts[i].sid   to articolishop.recordid             
35534>>>//                    Send Find of oarticolishop_DD eq 1
35534>>>//                     If (Found) Begin
35534>>>//                        Move (articolishop.pubblicato="S") to bfound
35534>>>//                        If (bfound) If (icategoriaID<>-1 ) Move ( articolishop.categoriaid =  mystFoundProducts[i].icategoriaid) to bfound
35534>>>//                            
35534>>>//                         If ( bfound and articolishop.stato =  sStatoArticolo ) Begin
35534>>>//                          
35534>>>//                                       If (articolishop.scadenza>"" and articolishop.prezzoeuro>0) Begin 
35534>>>//                                         Move (dtoday<=articolishop.scadenza) to bfound   
35534>>>//                                       End
35534>>>//                                       Else If (articolishop.prezzoeuro>0) Move True to bfound
35534>>>//                                       If  (bfound and (iViewType=VIEWTYPEMARKETC2C)) Move  (articolishop.stato="S" or Articolishop.stato="U") to bfound
35534>>>//                                         
35534>>>//                         End
35534>>>//                         //
35534>>>//                         If bfound Begin 
35534>>>//                              Move (Replaces(" ", Trim(articolishop.recordid), "_")) to sId
35534>>>//                        
35534>>>//                            Get CreateDynamicObject (RefClass(cDwProductGrp)) (sId + "_articologrpfound") ( "found_pcartgrp") "" to hoGroup
35534>>>//                                     Send InitDynamicProp of hoGroup "psBackgroundColor"  "white"
35534>>>//                            Send InitDynamicProp of hoGroup "psCaption" (Trim(articolishop.recordid))
35534>>>//                               WebGet peMode of ghoWebApp to eMode
35534>>>//                           If ( emode  =  rmDesktop or emode = rmTablet) Send InitDynamicProp of hoGroup "piColumnIndex" (Mod(iCount, 3) * 4)
35534>>>//                           Else  Send InitDynamicProp of hoGroup "piColumnIndex" 0 // (Mod(iCount, 3) *1)
35534>>>//                              
35534>>>//                           Get CreateDynamicObject (RefClass(cwebhtmlboxArticoloImages)) (sId + "_descimagefound") (sId + "_articologrpfound") to hodesartImg
35534>>>//                             Send InitDynamicProp of hodesartImg "psBackgroundColor"  "white"
35534>>>//  
35534>>>//                             Get CreateDynamicObject (RefClass(cWebHtmlarticoloDes)) (sId + "_descfound") (sId + "_articologrpfound") to hodesart
35534>>>//                              Send InitDynamicProp of hodesart "piarticoloselezionato" sId
35534>>>//                            Send InitDynamicProp of hodesart "psBackgroundColor"  "white"
35534>>>//                              Get loadstruct of   hodesartImg   to     asMyArticoliOnline 
35534>>>//                              Get movestruct    of    hodesart  asMyArticoliOnline    to  syMyShowArticoliBoxHtml
35534>>>//                              Send myupdatehtml of   hodesart  syMyShowArticoliBoxHtml  
35534>>>//  
35534>>>//                              Send myupdatehtml of   hodesartImg  syMyShowArticoliBoxHtml  
35534>>>//                              
35534>>>//                              If (articolishop.qtadisponibile > 0 ) Begin
35534>>>//                                    Get CreateDynamicObject (RefClass(cDwProductQty)) (sId + "_qty") (sId + "_articologrpfound") to hoAddBtn
35534>>>//                                       Send InitDynamicProp of hoAddBtn "psBackgroundColor"  "white"
35534>>>//                                    If (articolishop.qtamultipliminimo = "S") Move articolishop.qtaminimaordinabile to iqta
35534>>>//                                    Else Move 1 to iqta
35534>>>//                                    Send InitDynamicProp of hoAddBtn "psValue" iqta
35534>>>//                                   Send InitDynamicProp of hoAddBtn "psItemID" (Trim(articolishop.recordid))
35534>>>//                                     Send InitDynamicProp of hoAddBtn "psShop" (Trim(articolishop.owner))
35534>>>//                               
35534>>>//                               // prezzi
35534>>>//                                    
35534>>>//                                    Get CreateDynamicObject (RefClass(cDwProductAdd)) (sId + "_addfound") (sId + "_articologrpfound") to hoAddBtn
35534>>>//                                        Send InitDynamicProp of hoAddBtn  "psBackgroundColor"  "white"
35534>>>//                                    Send InitDynamicProp of hoAddBtn "psItemID" (Trim(articolishop.recordid))
35534>>>//                                    Send InitDynamicProp of hoAddBtn "psItemImg" (Trim(articolishop.immagine1))
35534>>>//                                    Send InitDynamicProp of hoAddBtn "psItemDes" (Trim(articolishop.descrizione))
35534>>>//                                      Send InitDynamicProp of hoAddBtn "piContataglie"  articolishop.contataglie
35534>>>//                               
35534>>>//                                     If   (articolishop.contataglie>0 ) Begin 
35534>>>//                                        Send InitDynamicProp of hoAddBtn "psCaption" (translatestring("vai alla scheda"))
35534>>>//                                        Send InitDynamicProp of hoAddBtn "piContaTaglie"  articolishop.contataglie
35534>>>//    
35534>>>//                                     End
35534>>>//                                 
35534>>>//                                    If (articolishop.scadenzapromo >=dtoday and articolishop.datainiziopromo<=dtoday  and articolishop.attivapromodcy ="S") Begin 
35534>>>//                                           If (articolishop.Promodcypercento>0 )  Send InitDynamicProp of hoAddBtn "pnAddValue"  (articolishop.prezzoeuro - (articolishop.prezzoeuro * articolishop.Promodcypercento/100)) 
35534>>>//                                           Else Send InitDynamicProp of hoAddBtn "pnAddValue" (Trim(articolishop.prezzoeuroduranteofferta))
35534>>>//                                    End
35534>>>//                                    Else Send InitDynamicProp of hoAddBtn "pnAddValue" (Trim(articolishop.prezzoeuro))
35534>>>//                                      Send InitDynamicProp of hoAddBtn "psShop" (Trim(articolishop.owner))
35534>>>//                                    
35534>>>//            //                        
35534>>>//                                   
35534>>>//                              End
35534>>>//                               Increment iCount
35534>>>//                        End
35534>>>//  
35534>>>//                     End //WHILE
35534>>>////                    
35534>>>//                     
35534>>>//                    // Send AppendDynamicObject (scatId + "_pcartgrp")
35534>>>//    
35534>>>//                 Loop // FOR I
35534>>>//                          
35534>>>// 
35534>>>//   
35534>>>//                 Send Activate    
35534>>>                
35534>>>            End_Procedure
35535>>>
35535>>>            End_Object
35536>>>
35536>>> 
35536>>>    End_Object
35537>>>    
35537>>>   Procedure OnBeforeShow
35540>>>        // Each time this view is shown, we will update the appropriate information.
35540>>>        Send FindFromTop of oLatestActivity_list
35541>>>        Send FindFromTop of oRecentComunita_list // ultimi negozi
35542>>>    End_Procedure
35543>>>
35543>>>End_Object
35544>    Use gestorehttp.wo
Including file: gestorehttp.wo    (D:\dataflex projects\comunitasolidaliengine\AppSrc\gestorehttp.wo)
35544>>>Use cWebHttpHandler.pkg
35544>>>Use cutentiDataDictionary.dd
Including file: cutentiDataDictionary.dd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\cutentiDataDictionary.dd)
35544>>>>>Use DataDict.pkg
35544>>>>>
35544>>>>>Open utenti
Including file: utenti.fd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\utenti.fd)
35546>>>>>
35546>>>>>Class cutentiDataDictionary is a DataDictionary
35547>>>>>    
35547>>>>>    Procedure Construct_Object
35549>>>>>        Forward Send Construct_Object
35551>>>>>        Set Main_File to utenti.File_Number
35552>>>>>
35552>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
35553>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
35554>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
35555>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
35556>>>>>
35556>>>>>    End_Procedure
35557>>>>>
35557>>>>>End_Class
35558>>>Use ccoinsDataDictionary.dd
Including file: ccoinsDataDictionary.dd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\ccoinsDataDictionary.dd)
35558>>>>>Use DataDict.pkg
35558>>>>>
35558>>>>>Open coins
Including file: coins.fd    (D:\dataflex projects\comunitasolidaliengine\DDSrc\coins.fd)
35560>>>>>
35560>>>>>Class ccoinsDataDictionary is a DataDictionary
35561>>>>>    
35561>>>>>    Procedure Construct_Object
35563>>>>>        Forward Send Construct_Object
35565>>>>>        Set Main_File to coins.File_Number
35566>>>>>
35566>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
35567>>>>>        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
35568>>>>>        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
35569>>>>>        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True
35570>>>>>
35570>>>>>    End_Procedure
35571>>>>>
35571>>>>>End_Class
35572>>>Use carticoliDataDictionary.dd
35572>>>Use cnegoziDataDictionary.dd
35572>>>
35572>>>//  With the cWebHttpHandler you handle complete HTTP requests.
35572>>>Object oGestorehttp is a cWebHttpHandler
35574>>>    Object onegozi_DD is a cnegoziDataDictionary
35576>>>    End_Object
35577>>>
35577>>>    Object oarticoli_DD is a carticoliDataDictionary
35579>>>    End_Object
35580>>>
35580>>>    Object ocoins_DD is a ccoinsDataDictionary
35582>>>    End_Object
35583>>>
35583>>>    Object oCustomer_DD is a cutentiDataDictionary
35585>>>    End_Object
35586>>>
35586>>>    Set Main_DD to oCustomer_DD
35587>>>    
35587>>>    //  The psPath property determines the path in the URL for which requests will be handled.
35587>>>    Set psPath to "Marketplace"
35588>>>    //  Use psVerbs to filter based on the HTTP Verbs. 
35588>>>    Set psVerbs to "*"
35589>>>    
35589>>>    Procedure OnHttpPost String sPath String sContentType String sAcceptType Integer iSize
35592>>>        String[] aParts
35593>>>        Handle hoJson hoResponse
35593>>>        UChar[] ucData
35594>>>        Boolean bSuccess
35594>>>
35594>>>    Get StrSplitToArray sPath "/" to aParts
35595>>>    If (SizeOfArray(aParts) < 2) Begin
35597>>>            Send SetResponseStatus 404 "Invalid resource" 
35598>>>            Procedure_Return
35599>>>        End
35599>>>>
35599>>>    If (SizeOfArray(aParts) > 1 and Lowercase(aParts[1]) = "nuovocliente") Begin
35601>>>        Send SaveCustomer True ""
35602>>>        
35602>>>//        Get RequestDataUChar iSize to ucData
35602>>>//        Get Create (RefClass(cJsonObject)) to hoJson
35602>>>//        Get ParseUtf8 of hoJson ucData to bSuccess
35602>>>//        
35602>>>//        If (bSuccess) Begin
35602>>>//           Get SaveCustomer hoJson ucData to hoResponse
35602>>>//            
35602>>>//            Get StringifyUtf8 of hoResponse to ucData
35602>>>//            Send Destroy of hoResponse
35602>>>//            Send Destroy of hoJson
35602>>>//            
35602>>>//            Send AddHttpResponseHeader "Content-Type" "application/json"
35602>>>//            Send OutputUChar ucData
35602>>>//        End
35602>>>//        Else Begin
35602>>>//            Send SetResponseStatus 500 "Unable to parse JSON" 0
35602>>>//            Send OutputString (psParseError(hoJson))
35602>>>//        End
35602>>>     End
35602>>>>
35602>>>   Else  If (SizeOfArray(aParts) > 1 and Lowercase(aParts[1]) = "nuovoarticolo") Begin
35605>>>      Send  SaveNewarticolo True ""
35606>>>   End
35606>>>>
35606>>>      Else  If (SizeOfArray(aParts) > 1 and Lowercase(aParts[1]) = "nuovonegozio") Begin
35609>>>      Send  SaveNewNegozio True ""
35610>>>     End
35610>>>>
35610>>>     Else Begin
35611>>>        Send SetResponseStatus 404 "Entity not known" 0
35612>>>    End
35612>>>>
35612>>>End_Procedure
35613>>>
35613>>> Procedure OnHttpGet String sPath String sAcceptType
35616>>>        String sName
35616>>>        
35616>>>        Get UrlParameter "name" to sName
35617>>>        
35617>>>        Send AddHttpResponseHeader "Content-Type" "text/html"
35618>>>                
35618>>>        Send OutputString '<html>'
35619>>>        Send OutputString '<head><title>Hello world!</title></head>'
35620>>>        Send OutputString (SFormat('<body><h1>Hi %1!</h1></body>', sName))
35621>>>        Send OutputString '</html>'
35622>>> End_Procedure
35623>>>
35623>>>  //  Helper function that generates a response based on a JSON object.
35623>>>    Procedure OutputJson Handle hoJson
35626>>>        UChar[] ucData
35627>>>        
35627>>>        Send AddHttpResponseHeader "Content-Type" "application/json"
35628>>>        Get StringifyUtf8 of hoJson to ucData
35629>>>        Send OutputUChar ucData
35630>>>    End_Procedure
35631>>>    
35631>>>    
35631>>>    //  Helper function that reads an entire request into a JSON object.
35631>>>    Function RequestDataJson Handle ByRef hoJson Returns Boolean
35634>>>        UChar[] ucData
35635>>>        Boolean bSuccess
35635>>>        String sErr
35635>>>        
35635>>>        Get Create (RefClass(cJsonObject)) to hoJson
35636>>>        
35636>>>        Get RequestDataUChar -1 to ucData
35637>>>        Get ParseUtf8 of hoJson ucData to bSuccess
35638>>>        
35638>>>        If (not(bSuccess)) Begin
35640>>>            Get psParseError of hoJson to sErr
35641>>>            Send SetResponseStatus 400 sErr
35642>>>        End
35642>>>>
35642>>>        
35642>>>        Function_Return bSuccess
35643>>>    End_Function
35644>>>    
35644>>>   Procedure SaveCustomer Boolean bCreate String sKey
35647>>>    
35647>>>        Boolean bSuccess
35647>>>        String sVal
35647>>>        Boolean bVal bErr
35647>>>        Handle hoJson
35647>>>       
35647>>>        If (bCreate) Begin
35649>>>            Send Clear of oCustomer_DD
35650>>>        End
35650>>>>
35650>>>        Else Begin 
35651>>>            // ricerca uno esistente
35651>>>        
35651>>>        //  Find the right record
35651>>>        
35651>>>//            Send Clear of oCustomer_DD
35651>>>//            Move sKey to utenti.username
35651>>>//            
35651>>>//            Send Find of oCustomer_DD EQ 1
35651>>>//            
35651>>>//            If (not(Found)) Begin
35651>>>//                Send SetResponseStatus 404 "Resource not found"
35651>>>//                Procedure_Return
35651>>>//            End
35651>>>        End
35651>>>>
35651>>>  
35651>>>        //  Read the request data
35651>>>        Get RequestDataJson (&hoJson) to bSuccess
35652>>>        
35652>>>        If (bSuccess) Begin
35654>>>            Send ErrorQueueStart
35655>>>//            
35655>>>           //  Set the values
35655>>>            If (HasMember(hoJson, "Auth")) Begin
35657>>>                // validazione autorizzazione
35657>>>            End
35657>>>>
35657>>>            Else Begin 
35658>>>                Send SetResponseStatus 404 "Validazione non accettata"
35659>>>            End
35659>>>>
35659>>>              If (HasMember(hoJson, "Comunita")) Begin
35661>>>              Get MemberValue of hoJson "Comunita" to sVal
35662>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.comunita)) to sVal
35663>>>             End
35663>>>>
35663>>>//    
35663>>>            If (HasMember(hoJson, "Username")) Begin
35665>>>              Get MemberValue of hoJson "Username" to sVal
35666>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.username)) to sVal
35667>>>             End        
35667>>>>
35667>>>             If (HasMember(hoJson, "Moneta")) Begin
35669>>>                 Get MemberValue of hoJson "Moneta" to sVal
35670>>>                 Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.monetanome)) to sVal
35671>>>             End
35671>>>>
35671>>>//            
35671>>>             If (HasMember(hoJson, "Citta")) Begin
35673>>>               Get MemberValue of hoJson "Citta" to sVal
35674>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.citta)) to sVal
35675>>>             End
35675>>>>
35675>>>//            
35675>>>            If (HasMember(hoJson, "Nazione")) Begin
35677>>>                Get MemberValue of hoJson "Nazione" to sVal
35678>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.nazione)) to sVal
35679>>>            End
35679>>>>
35679>>>            
35679>>>            If (HasMember(hoJson, "Cap")) Begin
35681>>>                Get MemberValue of hoJson "Cap" to sVal
35682>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.cap)) to sVal
35683>>>            End
35683>>>>
35683>>>            
35683>>>            If (HasMember(hoJson, "Regione")) Begin
35685>>>                Get MemberValue of hoJson "Regione" to sVal
35686>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.regione)) to sVal
35687>>>            End
35687>>>>
35687>>>            
35687>>>            If (HasMember(hoJson, "Email")) Begin
35689>>>                Get MemberValue of hoJson "Email" to sVal
35690>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.email)) to sVal
35691>>>            End
35691>>>>
35691>>>            
35691>>>            If (HasMember(hoJson, "Cognome")) Begin
35693>>>                Get MemberValue of hoJson "Cognome" to sVal
35694>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.cognome)) to sVal
35695>>>            End
35695>>>>
35695>>>            
35695>>>            If (HasMember(hoJson, "Nome")) Begin
35697>>>                Get MemberValue of hoJson "Nome" to sVal
35698>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.nome)) to sVal
35699>>>            End
35699>>>>
35699>>>            If (HasMember(hoJson, "email")) Begin
35701>>>                Get MemberValue of hoJson "email" to sVal
35702>>>                Set Field_Changed_Value of oCustomer_DD (RefTable(utenti.nome)) to sVal
35703>>>            End
35703>>>>
35703>>> 
35703>>> //  Perform the save
35703>>>            If (ErrorCount(Self) = 0) Begin
35705>>>                Get Request_Validate of oCustomer_DD to bErr
35706>>>                If (not(bErr)) Begin
35708>>>                   Send Request_Save of oCustomer_DD     
35709>>>                   
35709>>>                   If (not(Err)) Begin
35711>>>                        Send Customer utenti.username utenti.comunita
35712>>>                   End
35712>>>>
35712>>>                End
35712>>>>
35712>>>            End            
35712>>>>
35712>>>            
35712>>>            Send ErrorQueueEnd
35713>>>            Send ErrorReportJson
35714>>>        End
35714>>>>
35714>>>        If (hoJson > 0) Begin
35716>>>            Send Destroy of hoJson
35717>>>        End
35717>>>>
35717>>>    End_Procedure
35718>>>
35718>>> Procedure Customer String sKey String skeycomune
35721>>>        Handle hoJson
35721>>>        
35721>>>        Send Clear of oCustomer_DD
35722>>>        Move sKey to utenti.username
35723>>>        Move skeycomune to utenti.comunita
35724>>>        Send Find of oCustomer_DD EQ 1
35725>>>        
35725>>>        If (Found) Begin
35727>>>            Get Create (RefClass(cJsonObject)) to hoJson
35728>>>            Send InitializeJsonType of hoJson jsonTypeObject
35729>>>            
35729>>>            Send SetMemberValue of hoJson "Username" jsonTypestring utenti.username
35730>>>            Send SetMemberValue of hoJson "Nome" jsonTypeString (Trim(utenti.nome))
35731>>>            Send SetMemberValue of hoJson "Cognome" jsonTypeString (Trim(utenti.cognome))
35732>>>            Send SetMemberValue of hoJson "Citta" jsonTypeString (Trim(utenti.citta))
35733>>>            Send SetMemberValue of hoJson "Nazione" jsonTypeString (Trim(utenti.nazione))
35734>>>            Send SetMemberValue of hoJson "Cap" jsonTypeString (Trim(utenti.cap))
35735>>>            Send SetMemberValue of hoJson "Comunita" jsonTypeString (Trim(utenti.comunita))
35736>>>            Send SetMemberValue of hoJson "Email" jsonTypeString (Trim(utenti.email))
35737>>>            Send SetMemberValue of hoJson "Moneta" jsonTypestring utenti.monetanome
35738>>> 
35738>>>            
35738>>>            
35738>>>            Send OutputJson hoJson
35739>>>            Send Destroy of hoJson
35740>>>        End
35740>>>>
35740>>>        Else Begin
35741>>>            Send SetResponseStatus 404 "Resource not found"
35742>>>        End
35742>>>>
35742>>> End_Procedure
35743>>> 
35743>>> Procedure Articolo String sKey String skeycomune
35746>>>        Handle hoJson
35746>>>        
35746>>>        Send Clear of oarticoli_DD
35747>>>        Move sKey to articoli.codarticolo
35748>>>        Move skeycomune to articoli.comunita
35749>>>        Send Find of oarticoli_DD EQ 1
35750>>>        
35750>>>        If (Found) Begin
35752>>>            Get Create (RefClass(cJsonObject)) to hoJson
35753>>>            Send InitializeJsonType of hoJson jsonTypeObject
35754>>>            
35754>>>            Send SetMemberValue of hoJson "codarticolo" jsonTypestring articoli.codarticolo
35755>>>            Send SetMemberValue of hoJson "descrizionesintetica" jsonTypeString (Trim(articoli.descrizionesintetica))
35756>>>            Send SetMemberValue of hoJson "moneta" jsonTypeString (Trim(articoli.moneta))
35757>>>            Send SetMemberValue of hoJson "valoreunitario" jsonTypeString (Trim(articoli.prezzoeuro))
35758>>>            Send SetMemberValue of hoJson "comunita" jsonTypeString (Trim(articoli.comunita))
35759>>>              
35759>>>            
35759>>>            Send OutputJson hoJson
35760>>>            Send Destroy of hoJson
35761>>>        End
35761>>>>
35761>>>        Else Begin
35762>>>            Send SetResponseStatus 404 "Resource not found"
35763>>>        End
35763>>>>
35763>>>    End_Procedure
35764>>>
35764>>> 
35764>>> Procedure Negozio String sKey String skeycomune
35767>>>        Handle hoJson
35767>>>        
35767>>>        Send Clear of onegozi_dd
35768>>>        Move sKey to negozi.recordid
35769>>>      //Move skeycomune to negozi.comunita
35769>>>        Send Find of onegozi_dd EQ 1
35770>>>        
35770>>>        If (Found) Begin
35772>>>            Get Create (RefClass(cJsonObject)) to hoJson
35773>>>            Send InitializeJsonType of hoJson jsonTypeObject
35774>>>            
35774>>>            Send SetMemberValue of hoJson "recorid" jsonTypestring negozi.recordid
35775>>>            Send SetMemberValue of hoJson "nomenegozio" jsonTypeString (Trim(negozi.nomenegozio))
35776>>>            Send SetMemberValue of hoJson "moneta" jsonTypeString (Trim(negozi.moneta))
35777>>>            Send SetMemberValue of hoJson "categoria" jsonTypeString (Trim(negozi.categoria))
35778>>>            Send SetMemberValue of hoJson "comunita" jsonTypeString (Trim(negozi.comunita))
35779>>>            Send SetMemberValue of hoJson "datareg" jsonTypeString (Trim(negozi.datareg))
35780>>>         
35780>>> 
35780>>>              
35780>>>            
35780>>>            Send OutputJson hoJson
35781>>>            Send Destroy of hoJson
35782>>>        End
35782>>>>
35782>>>        Else Begin
35783>>>            Send SetResponseStatus 404 "Resource not found"
35784>>>        End
35784>>>>
35784>>> End_Procedure
35785>>> 
35785>>>   Procedure SaveNewarticolo Boolean bCreate String sKey
35788>>>    
35788>>>        Boolean bSuccess
35788>>>        String sVal
35788>>>        Boolean bVal bErr
35788>>>        Handle hoJson
35788>>>       
35788>>>        If (bCreate) Begin
35790>>>            Send Clear of oarticoli_dd
35791>>>        End
35791>>>>
35791>>>        Else Begin 
35792>>>            // ricerca uno esistente
35792>>>        
35792>>>        //  Find the right record
35792>>>        
35792>>>//            Send Clear of oarticoli_dd
35792>>>//            Move sKey to utenti.username
35792>>>//            
35792>>>//            Send Find of oCustomer_DD EQ 1
35792>>>//            
35792>>>//            If (not(Found)) Begin
35792>>>//                Send SetResponseStatus 404 "Resource not found"
35792>>>//                Procedure_Return
35792>>>//            End
35792>>>        End
35792>>>>
35792>>>  
35792>>>        //  Read the request data
35792>>>        Get RequestDataJson (&hoJson) to bSuccess
35793>>>        
35793>>>        If (bSuccess) Begin
35795>>>            Send ErrorQueueStart
35796>>>//            
35796>>>           //  Set the values
35796>>>            If (HasMember(hoJson, "Auth")) Begin
35798>>>                // validazione autorizzazione
35798>>>            End
35798>>>>
35798>>>            Else Begin 
35799>>>                Send SetResponseStatus 404 "Validazione non accettata"
35800>>>            End
35800>>>>
35800>>>              If (HasMember(hoJson, "Comunita")) Begin
35802>>>              Get MemberValue of hoJson "Comunita" to sVal
35803>>>                Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.comunita)) to sVal
35804>>>             End
35804>>>>
35804>>>//    
35804>>>            If (HasMember(hoJson, "Codarticolo")) Begin
35806>>>              Get MemberValue of hoJson "Codarticolo" to sVal
35807>>>                Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.codarticolo)) to sVal
35808>>>             End        
35808>>>>
35808>>>             If (HasMember(hoJson, "Moneta")) Begin
35810>>>                 Get MemberValue of hoJson "Moneta" to sVal
35811>>>                 Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.moneta)) to sVal
35812>>>             End
35812>>>>
35812>>>//            
35812>>>             If (HasMember(hoJson, "Descrizionesintetica")) Begin
35814>>>               Get MemberValue of hoJson "Descrizionesintetica" to sVal
35815>>>                Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.descrizionesintetica)) to sVal
35816>>>             End
35816>>>>
35816>>>//            
35816>>>            If (HasMember(hoJson, "Descrizionecompleta")) Begin
35818>>>                Get MemberValue of hoJson "Descrizionecompleta" to sVal
35819>>>                Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.descrizionecompleta)) to sVal
35820>>>            End
35820>>>>
35820>>>            
35820>>>            If (HasMember(hoJson, "Immaginelink")) Begin
35822>>>                Get MemberValue of hoJson "Immaginelink" to sVal
35823>>>                Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.immaginelink)) to sVal
35824>>>            End
35824>>>>
35824>>>            
35824>>>            If (HasMember(hoJson, "Prezzoeuro")) Begin
35826>>>                Get MemberValue of hoJson "Prezzoeuro" to sVal
35827>>>                Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.prezzoeuro)) to sVal
35828>>>            End
35828>>>>
35828>>>            
35828>>>            If (HasMember(hoJson, "Prezzovaluta")) Begin
35830>>>                Get MemberValue of hoJson "Prezzovaluta" to sVal
35831>>>                Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.prezzovaluta )) to sVal
35832>>>            End
35832>>>>
35832>>>             If (HasMember(hoJson, "Linkarticolonegozio")) Begin
35834>>>                Get MemberValue of hoJson "Linkarticolonegozio" to sVal
35835>>>                Set Field_Changed_Value of oarticoli_dd (RefTable(articoli.prezzovaluta )) to sVal
35836>>>            End
35836>>>>
35836>>>            
35836>>> 
35836>>> //  Perform the save
35836>>>            If (ErrorCount(Self) = 0) Begin
35838>>>                Get Request_Validate of oarticoli_dd to bErr
35839>>>                If (not(bErr)) Begin
35841>>>                   Send Request_Save of oarticoli_dd     
35842>>>                   
35842>>>                   If (not(Err)) Begin
35844>>>                        Send Articolo articoli.codarticolo articoli.comunita
35845>>>                   End
35845>>>>
35845>>>                End
35845>>>>
35845>>>            End            
35845>>>>
35845>>>            
35845>>>            Send ErrorQueueEnd
35846>>>            Send ErrorReportJson
35847>>>        End
35847>>>>
35847>>>        If (hoJson > 0) Begin
35849>>>            Send Destroy of hoJson
35850>>>        End
35850>>>>
35850>>>    End_Procedure
35851>>>
35851>>>
35851>>>  Procedure SaveNewNegozio Boolean bCreate String sKey
35854>>>    
35854>>>        Boolean bSuccess
35854>>>        String sVal
35854>>>        Boolean bVal bErr
35854>>>        Handle hoJson
35854>>>       
35854>>>        If (bCreate) Begin
35856>>>            Send Clear of onegozi_DD
35857>>>        End
35857>>>>
35857>>>        Else Begin 
35858>>>            // ricerca uno esistente
35858>>>        
35858>>>        //  Find the right record
35858>>>        
35858>>>//            Send Clear of oarticoli_dd
35858>>>//            Move sKey to utenti.username
35858>>>//            
35858>>>//            Send Find of oCustomer_DD EQ 1
35858>>>//            
35858>>>//            If (not(Found)) Begin
35858>>>//                Send SetResponseStatus 404 "Resource not found"
35858>>>//                Procedure_Return
35858>>>//            End
35858>>>        End
35858>>>>
35858>>>  
35858>>>        //  Read the request data
35858>>>        Get RequestDataJson (&hoJson) to bSuccess
35859>>>        
35859>>>        If (bSuccess) Begin
35861>>>            Send ErrorQueueStart
35862>>>//            
35862>>>           //  Set the values
35862>>>            If (HasMember(hoJson, "Auth")) Begin
35864>>>                // validazione autorizzazione
35864>>>            End
35864>>>>
35864>>>            Else Begin 
35865>>>                Send SetResponseStatus 404 "Validazione non accettata"
35866>>>            End
35866>>>>
35866>>>              If (HasMember(hoJson, "Comunita")) Begin
35868>>>              Get MemberValue of hoJson "Comunita" to sVal
35869>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.comunita)) to sVal
35870>>>             End
35870>>>>
35870>>>//    
35870>>>            If (HasMember(hoJson, "Negozio")) Begin
35872>>>              Get MemberValue of hoJson "Negozio" to sVal
35873>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.nomenegozio)) to sVal
35874>>>             End        
35874>>>>
35874>>>             If (HasMember(hoJson, "Moneta")) Begin
35876>>>                 Get MemberValue of hoJson "Moneta" to sVal
35877>>>                 Set Field_Changed_Value of onegozi_DD (RefTable(negozi.moneta)) to sVal
35878>>>             End
35878>>>>
35878>>>//            
35878>>>             If (HasMember(hoJson, "Latitudine")) Begin
35880>>>               Get MemberValue of hoJson "Latitudine" to sVal
35881>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.latitudine)) to sVal
35882>>>             End
35882>>>>
35882>>>//            
35882>>>            If (HasMember(hoJson, "Longitudine")) Begin
35884>>>                Get MemberValue of hoJson "Longitudine" to sVal
35885>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.longitudine)) to sVal
35886>>>            End
35886>>>>
35886>>>            
35886>>>            If (HasMember(hoJson, "Categoria")) Begin
35888>>>                Get MemberValue of hoJson "Categoria" to sVal
35889>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.categoria)) to sVal
35890>>>            End
35890>>>>
35890>>>            
35890>>>            If (HasMember(hoJson, "Tag")) Begin
35892>>>                Get MemberValue of hoJson "Tag" to sVal
35893>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.tag)) to sVal
35894>>>            End
35894>>>>
35894>>>            
35894>>>            If (HasMember(hoJson, "Nazione")) Begin
35896>>>                Get MemberValue of hoJson "Nazione" to sVal
35897>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.nazione )) to sVal
35898>>>            End
35898>>>>
35898>>>             If (HasMember(hoJson, "Citta")) Begin
35900>>>                Get MemberValue of hoJson "Citta" to sVal
35901>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.citta )) to sVal
35902>>>            End
35902>>>>
35902>>>         If (HasMember(hoJson, "Sitoweb")) Begin
35904>>>                Get MemberValue of hoJson "Sitoweb" to sVal
35905>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.sitoweb )) to sVal
35906>>>         End            
35906>>>>
35906>>>         If (HasMember(hoJson, "Linkvetrina")) Begin
35908>>>                Get MemberValue of hoJson "Linkvetrina" to sVal
35909>>>                Set Field_Changed_Value of onegozi_DD (RefTable(negozi.linkvetrina )) to sVal
35910>>>            End
35910>>>>
35910>>>            
35910>>> 
35910>>> //  Perform the save
35910>>>            If (ErrorCount(Self) = 0) Begin
35912>>>                Get Request_Validate of onegozi_dd to bErr
35913>>>                If (not(bErr)) Begin
35915>>>                   Send Request_Save of onegozi_dd     
35916>>>                   
35916>>>                   If (not(Err)) Begin
35918>>>                        Send negozio negozi.recordid negozi.comunita
35919>>>                   End
35919>>>>
35919>>>                End
35919>>>>
35919>>>            End            
35919>>>>
35919>>>            
35919>>>            Send ErrorQueueEnd
35920>>>            Send ErrorReportJson
35921>>>        End
35921>>>>
35921>>>        If (hoJson > 0) Begin
35923>>>            Send Destroy of hoJson
35924>>>        End
35924>>>>
35924>>>    End_Procedure
35925>>>
35925>>>
35925>>> Procedure Customer String sKey String skeycomune
35928>>>        Handle hoJson
35928>>>        
35928>>>        Send Clear of oCustomer_DD
35929>>>        Move sKey to utenti.username
35930>>>        Move skeycomune to utenti.comunita
35931>>>        Send Find of oCustomer_DD EQ 1
35932>>>        
35932>>>        If (Found) Begin
35934>>>            Get Create (RefClass(cJsonObject)) to hoJson
35935>>>            Send InitializeJsonType of hoJson jsonTypeObject
35936>>>            
35936>>>            Send SetMemberValue of hoJson "Username" jsonTypestring utenti.username
35937>>>            Send SetMemberValue of hoJson "Nome" jsonTypeString (Trim(utenti.nome))
35938>>>            Send SetMemberValue of hoJson "Cognome" jsonTypeString (Trim(utenti.cognome))
35939>>>            Send SetMemberValue of hoJson "Citta" jsonTypeString (Trim(utenti.citta))
35940>>>            Send SetMemberValue of hoJson "Nazione" jsonTypeString (Trim(utenti.nazione))
35941>>>            Send SetMemberValue of hoJson "Cap" jsonTypeString (Trim(utenti.cap))
35942>>>            Send SetMemberValue of hoJson "Comunita" jsonTypeString (Trim(utenti.comunita))
35943>>>            Send SetMemberValue of hoJson "Email" jsonTypeString (Trim(utenti.email))
35944>>>            Send SetMemberValue of hoJson "Moneta" jsonTypestring utenti.monetanome
35945>>> 
35945>>>            
35945>>>            
35945>>>            Send OutputJson hoJson
35946>>>            Send Destroy of hoJson
35947>>>        End
35947>>>>
35947>>>        Else Begin
35948>>>            Send SetResponseStatus 404 "Resource not found"
35949>>>        End
35949>>>>
35949>>>    End_Procedure
35950>>>    
35950>>>    
35950>>>     //  Helper function that reports all errors on the error queue in JSON format.
35950>>>    Procedure ErrorReportJson
35953>>>        Integer iErr iErrC
35953>>>        Handle hoJson hoErrors   
35953>>>        String sMessage
35953>>>        
35953>>>        Get ErrorCount to iErrC
35954>>>        If (iErrC > 0) Begin
35956>>>            Send SetResponseStatus 400 "Errors occurred"
35957>>>            
35957>>>            Get Create (RefClass(cJsonObject)) to hoJson
35958>>>            Send InitializeJsonType of hoJson jsonTypeObject
35959>>>            
35959>>>            Get Create (RefClass(cJsonObject)) to hoErrors
35960>>>            Send InitializeJsonType of hoErrors jsonTypeArray
35961>>>            
35961>>>            For iErr from 0 to (iErrC - 1)
35967>>>>
35967>>>                Get ErrorMessage iErr to sMessage
35968>>>                Send AddMemberValue of hoErrors jsonTypeString  sMessage
35969>>>            Loop
35970>>>>
35970>>>            
35970>>>            Send SetMember of hoJson "aErrors" hoErrors
35971>>>            
35971>>>            Send OutputJson hoJson
35972>>>            
35972>>>            Send Destroy of hoErrors
35973>>>            Send Destroy of hoJson
35974>>>        End
35974>>>>
35974>>>    End_Procedure
35975>>>
35975>>>End_Object
35976>    Set phoDefaultView to oDashboard
35977>
35977>End_Object
35978>
35978>Send StartWebApp of oWebApp
35979>
Summary
Memory Available: 46454665216
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 23702
Total Resources: 0
Total Commands : 35978
Total Windows  : 0
Total Pages    : 0
Static Data    : 464033
Message area   : 249334
Total Blocks   : 16242
